<?xml version="1.0"?>

<project name="jboss-portal" basedir="." default="compile">
	<!-- This setting will override the value in the properties file -->
	<!--<property name="portal.type" value="jbossportal"/>-->

	<import file="../build-common.xml" />
	
	<import file="../deploy-support.xml" />
	
	<property name="jar.file" value="ssf-jbossportal.jar" />

	<target name="clean">
	</target>
	
	<!-- Incremental deploy for ssf-jbossportal.jar -->
	<target name="deploy" depends="jar">
		<antcall target="deploy-jar-into-portal">
			<param name="deploy-support.jar.file" value="${jar.file}" />
		</antcall>
	</target>

	<target name="clean-app-server">
		<delete failonerror="false">
			<fileset dir="${app.server.lib.dir}" includes="ssf-*.jar" />
		</delete>		
		
		<delete dir="${app.server.ssf.dir}"/>
		<delete dir="${app.server.ssfs.dir}"/>
	</target>
	
	<target name="init-jboss-portal">
		<if>
			<equals arg1="${app.server.type}" arg2="jboss-tomcat" />
			<then>
			</then>
		</if>	
	</target>
	
	<target name="full-deploy">
		<if>
			<equals arg1="${app.server.type}" arg2="jboss-tomcat" />
			<then>
				<antcall target="deploy-jboss-jboss-tomcat" />
			</then>
		</if>
	</target>
	
	<!-- Deploy additional components that are not part of ssf web app -->
	<target name="deploy-additional-components">
		<!-- kernel component is deployed into the app server's shared area -->
		<ant dir="${project.dir}/kernel" target="deploy" inheritAll="false" />
		<ant dir="${project.dir}/portal-module" target="deploy" inheritAll="false" />
		<ant dir="${project.dir}/jboss-portal" target="deploy" inheritAll="false" />
		<!-- ssfs component is deployed into its own web app -->
		<ant dir="${project.dir}/ssfs" target="deploy" inheritAll="false" />
	</target>
	
	<target name="deploy-jdbc-properties">
		<property file="${project.dir}/tools/sql/database.${user.name}.properties" />
		<property file="${project.dir}/tools/sql/database.properties" />
		<property file="${project.dir}/tools/sql/jdbc-${database.type}.properties"/>
		<replace file="${deploy.root.file}"
			token="@@@driverClassName" value="${jdbc.driver.liferay}"/>
		<replace file="${deploy.root.file}" 
			token="@@@url" value="${jdbc.url.liferay}"/>
		<replace file="${deploy.root.file}"
			token="@@@username" value="${jdbc.username.liferay}"/>
		<replace file="${deploy.root.file}"
			token="@@@password" value="${jdbc.password.liferay}"/>		
	</target>
		
	<target name="deploy-jboss-jboss-tomcat" depends="clean, init-jboss-portal, clean-app-server">	
		<unwar src="${project.dir}/war/ssf.war" dest="${app.server.ssf.dir}" />
		
		<antcall target="deploy-additional-components" />
		
		<copy todir="${app.server.dir}" overwrite="true">
			<fileset dir="resources/${jbossportal.version.jboss.tomcat}/jboss-tomcat" />
		</copy>
		
		<!--<echo file="${app.server.deploy.dir}/liferay-portal.ear/portal-web.war/META-INF/MANIFEST.MF" append="true" message=" lib/ssf-liferay.jar lib/ssf-portalmodule.jar" />-->
				
		<copy file="${project.dir}/lib/jtds.jar" todir="${app.server.server.dir}/lib" />
		
		<!-- 1. JBoss 4.0.2+ classloader does not work properly if the application 
		     comes with its own log4j archive. (You get the following error -
		     log4j:ERROR A "org.jboss.logging.util.OnlyOnceErrorHandler" object is not assignable to a "org.apache.log4j.spi.ErrorHandler" variable.)
		     So, we should remove the jar file from our lib area so that it uses
		     the one that JBoss has.
		     2. JBoss Portal, of course, comes with its own portlet API archive 
		     (named porlet-api-lib.jar NOT portlet.jar). If we have our own portlet.jar
		     in our lib directory, the Portal fails to load our portlets at startup.
		     So we must remove that too. 
		-->
		<delete>
			<fileset dir="${app.server.ssf.dir}/WEB-INF/lib" includes="log4j*.jar,portlet.jar"/>
		</delete>		
	</target>		

</project>
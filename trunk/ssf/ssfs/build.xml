<?xml version="1.0"?>

<project name="ssfs" basedir="." default="war">
	<import file="../build-common.xml" />
    <import file="../deploy-support.xml" />
	
	<property name="jar.file" value="ssf-ssfs.jar" />

	<property name="slide.war.file" value="slide.war" />
	<property name="output.war.name" value="ssfs" />
	<property name="output.war.file" value="${output.war.name}.war" />
	<property name="temp.dir" value="temp" />

	<target name="delete-temp">
		<delete includeEmptyDirs="true" failonerror="true">
			<fileset dir="${temp.dir}" />
		</delete>
	</target>
	
	<target name="clean" depends="build-common.clean, delete-temp">
		<delete>
			<fileset dir="." includes="${output.war.file}" />
		</delete>
	</target>
		
	<target name="jar" depends="compile,build-common.jar">
		<jar 
			jarfile="${jar.file}"
			update="true"
		>
			<fileset dir="${basedir}/../main/classes">
	        	<include name="com/sitescape/ef/ssfs/CrossContextConstants.class"/>
				<include name="com/sitescape/ef/ssfs/AlreadyExistsException.class"/>
				<include name="com/sitescape/ef/ssfs/NoAccessException.class"/>
				<include name="com/sitescape/ef/ssfs/NoSuchObjectException.class"/>
				<include name="com/sitescape/ef/ssfs/LockException.class"/>
	        	<include name="com/sitescape/ef/web/util/AttributesAndParamsOnlyServletRequest.class"/>
	        	<include name="com/sitescape/ef/web/util/NullServletResponse.class"/>
			</fileset>
		</jar>
	</target>

	<target name="unwar-original" depends="delete-temp">		
		<unwar src="resources/${slide.war.file}" dest="${temp.dir}"/>
	</target>
	
	<target name="apply-changes" depends="jar,unwar-original">
		<copy todir="${temp.dir}" overwrite="true">
			<fileset dir="resources/slide-war" includes="**/*" />
		</copy>
		<copy file="${jar.file}" todir="${temp.dir}/WEB-INF/lib" />
	</target>
	
	<target name="war" depends="apply-changes">		
		<war
			basedir="${temp.dir}"
			destfile="${output.war.file}"
			webxml="${temp.dir}/WEB-INF/web.xml"
			update="false"
		/>
	</target>
	
    <target name="deploy" depends="war">
        <antcall target="deploy-war">
        	<param name="deploy-support.war.name" value="${output.war.name}" />
        </antcall>
		<if>
			<equals arg1="${app.server.type}" arg2="jboss-tomcat" />
			<then>
				<!-- JBoss does not allow applications to load their own commons logging classes. 
				     They must use the shared one that JBoss already has. -->
				<delete>
					<fileset dir="${app.server.deploy.dir}/ssfs.war/WEB-INF/lib" includes="commons-logging*.jar"/>
				</delete>		
			</then>
		</if>
    </target>

	<target name="build-war-from-scratch" depends="delete-temp">
		<antcall target="build-custom-slide-war"/>
		<antcall target="war"/>
	</target>

	<target name="build-custom-slide-war">
		<unzip src="download/${slide.src.zip.file.name}" dest="${temp.dir}" />
		<copy todir="${temp.dir}" overwrite="true">
			<fileset dir="resources/slide-src" />
		</copy>
		<copy file="resources/slide-src/wck/build.properties.sample" tofile="${temp.dir}/wck/build.properties" overwrite="true" />
		<ant dir="${temp.dir}/wck" target="dist" inheritAll="false" />
		<copy file="${temp.dir}/wck/dist/slide.war" todir="resources" />
		<!-- The following jar files are copied into our lib directory because they are
		     needed to compile the Java source files in com.sitescape.ef.ssfs.* packages.
		     (the first two jar files also contain some changes we made to customize Slide). -->
		<!-- NOTE: Instead of copying these generated jar files into lib directory at build
		           time, we checked them into SCM for two reasons: 1) dealing with archives
		           in SCM is easier for developers (as opposed to two-pass build), 
		           2) these jar files will not change frequently. -->
		<!--<copy file="${temp.dir}/wck/dist/jakarta-slide-wck-1.0.jar" todir="${project.dir}/lib" />-->
		<!--<copy file="${temp.dir}/wck/dist/slide-kernel-2.2pre1.jar" todir="${project.dir}/lib" />-->
		<!--<copy file="${temp.dir}/dist/slide/lib/slide-jaas-2.2pre1.jar" todir="${project.dir}/lib" />-->
	</target>
</project>
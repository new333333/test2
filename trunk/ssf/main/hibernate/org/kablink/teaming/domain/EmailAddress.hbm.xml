<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping auto-import="false">
  <class dynamic-update="true" table="SS_EmailAddresses" lazy="false" name="org.kablink.teaming.domain.EmailAddress">
    <!--<cache usage="read-write"/>-->
    <composite-id >
     <!-- 
     Bug 900745 Eagerly load and initialize associated principal to avoid the problem. 
     A better way to address this would be to avoid the problem altogether by turning
     many-to-one association into a simple property of ID value. But that would require
     more changes to the overall system including the need for the application to 
     ensure that the referenced principal object is persisted before creating the
     association, etc. So, we're taking a less involved approach at the expense of
     some lost in efficiency.
     -->
     <key-many-to-one name="principal" lazy="false"/>
     <key-property name="type" length="64"/>
    </composite-id>
    <property name="zoneId" access="field" not-null="true"/>
    <property name="address" type="string"  length="256" index="address_email"/>
</class>
</hibernate-mapping>
<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping auto-import="false">
  <class dynamic-update="true" lazy="false" table="SS_Forums" dynamic-insert="false" name="org.kablink.teaming.domain.Binder">
    <!--<cache usage="read-write"/>-->
    <id unsaved-value="null" name="id" type="long" node="@id">
      <generator class="native">
      	<param name="sequence">ss_binder_id_sequence</param>
      </generator>
    </id>
    <discriminator type="string" column="type" length="16"/>
    <version unsaved-value="undefined" name="lockVersion" column="lockVersion" type="long"/>
    <property name="zoneId" not-null="true" index="internal_Binder"/>
	<property name="library"/>
	<property name="deleted"/>
	<property name="uniqueTitles"/>
	<property name="logVersion"/>
    <property name="mirrored"/>
    <property name="binderCount"/>
    <property name="type" update="false" insert="false"/> 
    <property name="resourceDriverName" length="64"/>
    <property name="resourcePath" length="1024" access="field"/>
    <property name="homeDir" access="field"/>
    <property name="allowDesktopAppToSyncData" access="field"/>
    <property name="allowMobileAppsToSyncData" access="field"/>
    <property name="indexContent" access="field"/>
    <many-to-one name="parentBinder">
          <column name="parentBinder" index="owningBinder_Binder"/>
    </many-to-one>
    <many-to-one name="owner" access="field"/>
    <!-- exclude evict, refresh, delete-orphan-->    
    <bag inverse="true" access="field" cascade="persist,merge,delete,save-update,replicate" optimistic-lock="false" lazy="true" name="binders">
        <!--<cache usage="read-write"/>-->
        <key column="parentBinder"/>
        <one-to-many class="org.kablink.teaming.domain.Binder"/>
    </bag>
    <map inverse="true" access="field" cascade="all,delete-orphan" batch-size="4" lazy="true" name="customAttributes">
      <!--<cache usage="read-write"/>-->
      <key column="binder"/>
      <map-key type="string" column="name"/>
      <one-to-many class="org.kablink.teaming.domain.CustomAttribute"/>
    </map>
    <map inverse="false" table="SS_WorkflowMap" access="field" cascade="all" lazy="true" name="workflowAssociations">
      <!--<cache usage="read-write"/>-->
      <key column="binder"/>
      <map-key type="string" column="entryDefinition" length="32"/>
      <many-to-many class="org.kablink.teaming.domain.Definition">
      	<column name="workflowDefinition" sql-type="char(32)"/>
      </many-to-many>
    </map>
    <set inverse="true" access="field" cascade="all,delete-orphan" lazy="true" batch-size="4" name="attachments">
      <!--<cache usage="read-write"/>-->
      <key column="binder"/>
      <one-to-many class="org.kablink.teaming.domain.Attachment"/>
    </set>
    <set inverse="true" access="field" cascade="all,delete-orphan" lazy="true" batch-size="4" name="events">
      <!--<cache usage="read-write"/>-->
      <key column="binder" on-delete="cascade"/>
      <one-to-many class="org.kablink.teaming.domain.Event"/>
    </set>
    <list inverse="false" access="field" cascade="all" lazy="true" table="SS_DefinitionMap" name="definitions">
      <!--<cache usage="read-write"/>-->
      <key column="binder"/>
      <index type="integer" column="position"/>
      <many-to-many fetch="join" class="org.kablink.teaming.domain.Definition">
        <column name="definition" sql-type="char(32)"/>
      </many-to-many>
    </list>
    <property name="name" length="128" />
    <property name="pathName" length="1024"/>
    <component name="notificationDef">
      <property name="teamOn" column="notify_teamOn"/>
      <property name="style" column="notify_style"/>
	  <bag inverse="false" access="field" cascade="all" optimistic-lock="false" lazy="true" table="SS_Notifications" name="distribution">
      	<key column="binderId" />
 	    <many-to-many fetch="join" class="org.kablink.teaming.domain.UserPrincipal" column="principalId"/>
       </bag>
       <property name="emailAddress" column="notify_email" type="org.springframework.orm.hibernate3.support.ClobStringType"/>
      <property name="fromAddress" length="128" column="notify_fromAddress"/>
      <property name="subject" length="128" column="notify_subject"/>
    </component>
    <many-to-one name="posting">
		<column name="posting" sql-type="char(32)"/>
    </many-to-one>
<!-- use length to force medium blog in mysql -->
    <property name="properties" length="2000000" type="org.springframework.orm.hibernate3.support.BlobSerializableType"/>
    <property name="functionMembershipInherited" not-null="true"/>
    <property name="extFunctionMembershipInherited" access="field"/>
    <property name="definitionsInherited"/>
    <property name="definitionType"/>
    <property name="teamMembershipInherited"/>
    <component name="averageRating" class="org.kablink.teaming.domain.AverageRating">
      <property name="average" column="ratings_average" />
      <property name="count" column="ratings_count"/>
    </component>
    <component name="description">
 <!-- use length to force medium blog in mysql -->
      <property name="HDescription"  length="2000000" column="description_text" type="org.kablink.teaming.dao.util.SSClobStringType"/>
      <property name="HFormat" column="description_format"/>
    </component>
<!-- use length to force medium blog in mysql -->
   	<property name="branding"  length="2000000" type="org.springframework.orm.hibernate3.support.ClobStringType"/>
	<property name="brandingExt" length="2000000" type="org.springframework.orm.hibernate3.support.ClobStringType"/>
    <property name="title" length="255" access="field"/>
    <property name="normalTitle" length="255"/>
    <property name="iconName" length="64"/>    
    <property name="internalId" length="32" index="internal_Binder"/>
    <property name="nextBinderNumber" />
    <component name="binderKey" class="org.kablink.teaming.domain.HKey">
      <property name="level" column="binder_level"/>
      <property name="sortKey" length="255" column="binder_sortKey" unique="true"/>
    </component>
    <property name="versionsEnabled" access="field"/>
    <property name="versionsToKeep" access="field"/>
    <property name="versionAgingDays" access="field"/>
    <property name="versionAgingEnabled" access="field"/>
    <property name="maxFileSize" access="field"/>
    <property name="fileEncryptionEnabled" access="field"/>
    
    <many-to-one access="field" class="org.kablink.teaming.domain.Definition" name="entryDef">
      <column name="entryDef" sql-type="char(32)"/>
    </many-to-one>
    <component name="creation" node="creation" class="org.kablink.teaming.domain.HistoryStamp">
      <property name="date" column="creation_date" type="timestamp"/>
      <many-to-one class="org.kablink.teaming.domain.UserPrincipal" embed-xml="false" node="Principal" name="principal">
        <column name="creation_principal"/>
      </many-to-one>
    </component>
    <component name="modification" node="modification" class="org.kablink.teaming.domain.HistoryStamp">
      <property name="date" column="modification_date" type="timestamp"/>
      <many-to-one class="org.kablink.teaming.domain.UserPrincipal" embed-xml="false" node="Principal" name="principal">
        <column name="modification_principal"/>
      </many-to-one>
    </component>
    <property name="postingEnabled" access="field"/>
    <subclass name="org.kablink.teaming.domain.Folder" node="ss_folder" discriminator-value="folder" dynamic-update="true">
      <many-to-one name="topFolder" />
      <property name="nextEntryNumber"/>
      <property name="entryRootKey">
 		<column name="entryRootKey" sql-type="char(15)"/>
 	  </property>
 	  <property name="preDeleted" access="field"/>
 	  <property name="preDeletedWhen"/>
 	  <property name="preDeletedBy"/>
     </subclass>
    <subclass name="org.kablink.teaming.domain.Workspace" discriminator-value="workspace" dynamic-update="true">
    	<property name="searchTitle" length="255" access="field"/>
    	<property name="preDeleted" access="field"/>
    	<property name="preDeletedWhen"/>
    	<property name="preDeletedBy"/>
     <subclass name="org.kablink.teaming.domain.ProfileBinder" discriminator-value="profiles" dynamic-update="true"/>
    </subclass>
    <subclass name="org.kablink.teaming.domain.TemplateBinder" discriminator-value="template" dynamic-update="true">
  	  <property name="templateTitle" length="128"/>
	  <component name="templateDescription">
   	   <property name="HDescription" column="tDescription_text" type="org.kablink.teaming.dao.util.SSClobStringType"/>
   	   <property name="HFormat" column="tDescription_format"/>
   	  </component>
   	  <property name="templateOwningBinderId" index="templateOwningBinderId_Binder"/>
   	  <property name="templateHidden"/>
    </subclass>
 
  </class>
  	
</hibernate-mapping>

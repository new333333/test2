<?xml version="1.0"?>

<project name="wsclient" basedir="." default="testRun">
	<target name="init">
		<echo message="##### WSCLIENT #####" />
		<property environment="env" />
  		<property name="project.dir" value="../.." />
  		<property file="${project.dir}/build.${user.name}.properties" />
  		<property file="${project.dir}/build.properties" />
		<property name="generated.dir" value="${basedir}/generated" />
		<!-- Use explicit path elements rather than picking up every jar file
		     in the system so that we can clearly document what subset of
		     archives (both our own and 3rd party) we need to have on the
		     client side -->
		<path id="wsclient.project.classpath">
			<pathelement path="${classes.dir};${project.dir}/remoting/classes" />
			<pathelement location="${project.dir}/lib/spring.jar" />
			<pathelement location="${project.dir}/lib/axis.jar" />
			<pathelement location="${project.dir}/lib/axis-ant.jar" />
			<pathelement location="${project.dir}/lib/jaxrpc.jar" />
			<pathelement location="${project.dir}/lib/commons-logging.jar" />
			<pathelement location="${project.dir}/lib/commons-discovery.jar" />
			<pathelement location="${project.dir}/lib/saaj.jar" />
			<pathelement location="${project.dir}/lib/wsdl4j.jar" />
			<pathelement location="${project.dir}/lib/wss4j.jar" />
			<pathelement location="${project.dir}/lib/addressing.jar" />
			<pathelement location="${project.dir}/lib/bcprov-jdk13-128.jar.jar" />
			<pathelement location="${project.dir}/lib/commons-codec.jar" />
			<pathelement location="${project.dir}/lib/opensaml.jar" />
			<pathelement location="${project.dir}/lib/xalan.jar" />
			<pathelement location="${project.dir}/lib/xmlsec.jar" />
		</path>
		<taskdef resource="axis-tasks.properties" classpathref="wsclient.project.classpath"/>
	</target>

	<target name="clean" depends="init">
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="${classes.dir}" excludes="${classes.dir.excludes}" />
		</delete>
	</target>
	
	<target name="cleanGenerated" depends="init">
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="${generated.dir}" />
		</delete>
	</target>
	
	<target name="compile" depends="init">
		<mkdir dir="${classes.dir}" />
		<javac
			classpathref="wsclient.project.classpath"
			compiler="${javac.compiler}"
			debug="${javac.debug}"
			deprecation="${javac.deprecation}"
			destdir="${classes.dir}"
			fork="${javac.fork}"
			memoryMaximumSize="${javac.memoryMaximumSize}"
			nowarn="${javac.nowarn}">
			<src path="${source.dir}" />
			<src path="${generated.dir}" />
		</javac>
	</target>
	
	<target name="testRun" depends="compile">
		<java 
			classname="com.sitescape.ef.samples.wsclient.MyFacadeClient"
			classpath="${classes.dir}"
			classpathref="wsclient.project.classpath"
			fork="true"
			dir="${basedir}"
			failonerror="true">
			<jvmarg value="-Daxis.ClientConfigFile=client_deploy.wsdd"/>
			<arg value="74"/>
			<arg value="491"/>
		</java>
	</target>
	
	<target name="testRun2" depends="compile">
		<java 
			classname="com.sitescape.ef.samples.wsclient.MyGeneratedFacadeClient"
			classpath="${classes.dir}"
			classpathref="wsclient.project.classpath"
			fork="true"
			dir="${basedir}"
			failonerror="true">
			<jvmarg value="-Daxis.ClientConfigFile=client_deploy.wsdd"/>
			<arg value="74"/>
			<arg value="491"/>
		</java>
	</target>
	
	<target name="wsdl2java" depends="cleanGenerated" description="Generate client service bindings from WSDL">
		<mkdir dir="${generated.dir}" />
		<axis-wsdl2java
			output="${generated.dir}"
			verbose="true"
			url="http://peace:8080/ssf/ws/Facade?wsdl" >
			<mapping
				namespace="http://peace:8080/ssf/ws/Facade"
				package="com.sitescape.ef.samples.remoting.client.ws.jaxrpc" />
			<mapping
				namespace="urn:SSF"
				package="com.sitescape.ef.samples.remoting.client.ws.jaxrpc" />
		</axis-wsdl2java>
	</target>
	
</project>
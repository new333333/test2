<?xml version="1.0"?>

<project name="gwt" basedir="." default="compile">
	<import file="../build-common.xml"   />
	<import file="../deploy-support.xml" />


	<!-- Define the basics of what we're building. -->
	<property name="jar.file"            value="kablink-teaming-gwt.jar"                />
	<property name="build.gwt.module"    value="GwtTeaming"                             />
	<property name="gwt.src"             value="src/org/kablink/teaming/gwt"            />
	<property name="gwt.all.browsers"    value="gecko1_8,ie6,ie8,ie9,ie10,opera,safari" />
	<property name="gwt.browsers.module" value="buildBrowsers"                          />	<!-- Must match <inherits> tag in GwtTeaming.gwt.xml. -->

	
	<!-- Define what we're building for GwtTeaming. -->
	<target name="init-gwt-build" depends="init-gwt-builds, init-gwt-production, init-gwt-development">
		<property name="gwt.module" value="org.kablink.teaming.gwt.${gwt.base}" />
		<property name="gwt.war"    value="-war www"                            />
	</target>
	<target name="init-gwt-builds">
		<!-- Development vs. Production. -->
		<condition property="development.build">
			<equals arg1="${build.gwt.mode}" arg2="development" />
		</condition>
		<condition property="production.build">
			<not>
				<isset property="development.build"/>
			</not>
		</condition>

		<!-- Deploy or Drop GWT symbol maps. -->
		<condition property="drop.symbol.maps">
			<equals arg1="${gwt.symbol.maps}" arg2="drop" />
		</condition>
		<condition property="deploy.symbol.maps">
			<not>
				<isset property="drop.symbol.maps"/>
			</not>
		</condition>
		
		<!-- Code fragment handling. -->
		<if>
			<isset property="gwt.merge.fragments" />
			<then>
				<property name="gwt.codeFragments" value="-XfragmentCount ${gwt.merge.fragments}" />
			</then>
			<else>
				<property name="gwt.codeFragments" value="" />
			</else>
		</if>
		
		<!-- Browser support. -->
		<if>
		    <isset property="development.build" />
		    <then>
				<echo message="Selecting browsers for development..."/>
		        <if>
		            <isset property="build.gwt.dev.browsers" />
		            <then>
						<echo message="...selecting specific browsers (${build.gwt.dev.browsers})."/>
						<echo file="${gwt.src}/${gwt.browsers.module}.gwt.xml">&lt;module>
   	&lt;set-property name="user.agent" value="${build.gwt.dev.browsers}" />
&lt;/module>
						</echo>
		            </then>
		            <else>
						<echo message="...selecting all browsers."/>
						<echo file="${gwt.src}/${gwt.browsers.module}.gwt.xml">&lt;module>
   	&lt;set-property name="user.agent" value="${gwt.all.browsers}" />
&lt;/module>
						</echo>
		            </else>
		        </if>
		        
		    </then>
		    <else>
				<echo message="Selecting browsers for production..."/>
				<echo message="...selecting all browsers."/>
				<echo file="${gwt.src}/${gwt.browsers.module}.gwt.xml">&lt;module>
   	&lt;set-property name="user.agent" value="${gwt.all.browsers}" />
&lt;/module>
				</echo>
		    </else>
		</if>
	</target>
	<target name="init-gwt-production" if="production.build">
		<echo message="Compiling ${build.gwt.module} for production."/>
		<property name="gwt.base"            value="${build.gwt.module}_prod" />
		<property name="gwt.localWorkers"    value="-localWorkers 4"          />
		<property name="gwt.logLevel"        value="-logLevel INFO"           />
		<property name="gwt.style"           value="-style OBF"               />
		<property name="gwt.additionalArgs1" value=""                         />
	</target>
	<target name="init-gwt-development" if="development.build">
		<echo message="Compiling ${build.gwt.module} for development."/>
		<property name="gwt.base"            value="${build.gwt.module}_dev" />
		<property name="gwt.localWorkers"    value="-localWorkers 2"         />
		<property name="gwt.logLevel"        value="-logLevel INFO"          />
		<property name="gwt.style"           value="-style DETAILED"         />
		<property name="gwt.additionalArgs1" value="-draftCompile -ea"       />
	</target>

	<!-- Compilation report handling. -->
	<if>
		<istrue value="${build.gwt.compileReport}" />
		<then>
			<property name="gwt.additionalArgs2" value="-compileReport" />
			<property name="gwt.java.xms"        value="-Xms2g"         />
			<property name="gwt.java.xmx"        value="-Xmx4g"         />
		</then>
		<else>
			<property name="gwt.additionalArgs2" value=""       />
			<property name="gwt.java.xms"        value="-Xms1g" />
			<property name="gwt.java.xmx"        value="-Xmx2g" />
		</else>
	</if>
	
	<!-- Define the platform that we're building on. -->
	<condition property="build.mac"      value="true" else="false">                                     <os family="mac"     />      </condition>
	<condition property="build.linux"    value="true" else="false"><and><isfalse value="${build.mac}" /><os family="unix"    /></and></condition>
	<condition property="build.windows"  value="true" else="false">                                     <os family="windows" />      </condition>

	
	<!-- Define the GWT development jar. -->
	<condition property="gwt.dev.jar" value="gwt-dev.jar"><istrue value="${build.linux}"   /></condition>
	<condition property="gwt.dev.jar" value="gwt-dev.jar"><istrue value="${build.mac}"     /></condition>
	<condition property="gwt.dev.jar" value="gwt-dev.jar"><istrue value="${build.windows}" /></condition>

	
	<!-- Define the tool directories. -->
	<property name="gwt.dir" location="../tools/gwt" />
	<property name="lib.dir" location="../lib"       />

	
	<!-- Set the desired classpath. -->
	<fileset id="gwtjars" dir="${gwt.dir}">
		<include name="gwt-user.jar"                        />
		<include name="gwt-dnd.jar"                         />
		<include name="gwt-log.jar"                         />
		<include name="validation-api-1.0.0.GA.jar"         />
		<include name="validation-api-1.0.0.GA-sources.jar" />
		<include name="${gwt.dev.jar}"                      />
	</fileset>
	<fileset id="libjars" dir="${lib.dir}">
		<include name="*.jar" />
	</fileset>
	<pathconvert property="gwtjars" refid="gwtjars" />
	<pathconvert property="libjars" refid="libjars" />
	<path id="classpath">
		<pathelement location="${src.dir}"  />
		<pathelement path="${gwtjars}"      />
		<pathelement path="${libjars}"      />
	</path>

	
	<target name="clean">
		<delete>
			<fileset dir="." includes="${jar.file}" />
		</delete>
		<delete includeEmptyDirs="true" failonerror="false">
		    <fileset dir="${gwt.src}" includes="${gwt.browsers.module}.gwt.xml" />
			<fileset dir="classes"    includes="**/*"                           />
			<fileset dir="extras"                                               />
			<fileset dir="www"                                                  />
		</delete>
	</target>

	
	<target name="compile-ignored" depends="build-common.compile,compile-gwt" />
	
	<target name="compile-gwt" depends="init-gwt-build">
		<!-- Compile the GWT stuff into www. -->
		<java
				classpath="src:${gwt.dir}/gwt-user.jar:${lib.dir}/gwt-cal.jar:${lib.dir}/lib-gwt-file.jar:${lib.dir}/gwt-crypto.jar:${gwt.dir}/gwt-dnd.jar:${gwt.dir}/gwt-log.jar:${lib.dir}/gwtquery.jar:${gwt.dir}/validation-api-1.0.0.GA.jar:${gwt.dir}/validation-api-1.0.0.GA-sources.jar:${gwt.dir}/${gwt.dev.jar}:"
				failonerror="true"
				classname="com.google.gwt.dev.Compiler"
				fork="true">
			<!-- GWT Compiler JVM arguments. -->
			<jvmarg value="${gwt.java.xms}"          />
			<jvmarg value="${gwt.java.xmx}"          />
			<jvmarg value="-Xss256m"                 />
			<jvmarg value="-Xverify:none"            />
			<jvmarg value="-XX:PermSize=256m"        />
			<jvmarg value="-XX:MaxPermSize=512m"     />
			<jvmarg value="-Djava.awt.headless=true" />
			<!-- GWT Compiler arguments. -->
			<arg line="${gwt.war} ${gwt.style} ${gwt.logLevel} ${gwt.codeFragments} ${gwt.localWorkers} ${gwt.additionalArgs1} ${gwt.additionalArgs2} ${gwt.module}" />
		</java>
	</target>

	<target name="build"/>
	
	<target name="deploy" depends="jar">
		<antcall target="deploy-jar">
			<param name="deploy-support.jar.file" value="${jar.file}" />
		</antcall>
		<antcall target="deploy-gwt"/>
	</target>
	
	<target name="deploy-gwt" depends="compile-gwt">
  		<property name="web.static.path" value="static/${web.static.dir}" />
		<mkdir  dir="${app.server.ssf.dir}/${web.static.path}/js/gwt"/>
		<copy todir="${app.server.ssf.dir}/${web.static.path}/js/gwt">
		        <fileset dir="www">
		        	<include name="**/*"/>
			</fileset>
		</copy>			
		<antcall target="clean-symbol-maps" />
	</target>
	
	<target name="clean-symbol-maps" if="drop.symbol.maps">
		<echo message="...removing symbol maps."/>
		<delete>
		        <fileset dir="${app.server.ssf.dir}/${web.static.path}/js/gwt/WEB-INF/deploy/gwtteaming/symbolMaps">
		        	<include name="**/*"/>
			</fileset>
		</delete>			
	</target>
</project>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/context/spring-aop-3.0.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	    
    <!-- ============================== Pre-authentication using cookie ============================ -->

	<bean id="_authenticationManager" class="org.kablink.teaming.asmodule.spring.security.config.TeamingAuthenticationManager">
		<constructor-arg>
		    <list>
		        <!-- Authentication provider for internal users (LDAP, local) -->
		        <ref bean="authenticationModule"/>
		    </list>
		</constructor-arg>
		<property name="authenticator"><value>web</value></property>
	</bean>

    <bean id="requestCookiePreAuthenticatedProcessingFilter" class="org.kablink.teaming.asmodule.spring.security.preauth.RequestCookiePreAuthenticatedProcessingFilter">
		<property name="authenticationManager" ref="_authenticationManager"/>
		<property name="continueFilterChainOnUnsuccessfulAuthentication"><value>false</value></property>
		<property name="principalRequestCookie"><value>dummy</value></property>
		<property name="noPrincipalCookie"><value>null</value></property>
		<property name="noPrincipal"><value>null</value></property>
		<property name="noCredentialsCookie"><value>empty</value></property>
		<property name="noCredentials"><value>empty</value></property>
    </bean>
  	
    <bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint">
    </bean>
  
    <security:http entry-point-ref="authenticationProcessingFilterEntryPoint" authentication-manager-ref="_authenticationManager">
		<security:custom-filter position="PRE_AUTH_FILTER" ref="requestCookiePreAuthenticatedProcessingFilter"/>
		
        <security:session-management session-fixation-protection="newSession" />

        <security:intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY" />

        <security:anonymous enabled="false" />
    </security:http>
   
</beans>

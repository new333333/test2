<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "../dtd/spring-beans.dtd">

<beans>

	<!-- =========================== Basic Infrastructural Beans ========================== -->

	<!-- Configurer that replaces ${...} placeholders with values from a properties file -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	</bean>

	<!-- Message source for this context, loaded from localized "messages_xx" files -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>content.messages</value>
			</list>
		</property>										
	</bean>

	<!-- Default View Resolver -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="cache"><value>false</value></property>
		<property name="viewClass"><value>org.springframework.web.servlet.view.JstlView</value></property>
		<property name="prefix"><value>/WEB-INF/jsp/</value></property>
		<property name="suffix"><value>.jsp</value></property>
	</bean>
	<!-- Enable this resolver to provide custimized views
	<bean id="customViewResolver" class="org.springframework.web.servlet.view.XmlViewResolver">
		<property name="order"><value>0</value></property>
		<property name="location"><value>/WEB-INF/views.xml</value></property>
	</bean>
	-->

	<!-- Template for the common dependency injection for controllers -->
	<bean id="controllerDependencyTemplate" lazy-init="true" abstract="true">
		<property name="employeeModule"><ref bean="employeeModule"/></property>
		<property name="workspaceModule"><ref bean="workspaceModule"/></property>
		<property name="folderModule"><ref bean="folderModule"/></property>
		<property name="adminModule"><ref bean="adminModule"/></property>
		<property name="profileModule"><ref bean="profileModule"/></property>
		<property name="definitionModule"><ref bean="definitionModule"/></property>
		<property name="forumActionModule"><ref bean="forumActionModule"/></property>
		<property name="ldapModule"><ref bean="ldapModule"/></property>
		<property name="functionManager"><ref bean="functionManager"/></property>
		
	</bean>

	<!-- add support for lobhandler to support hibernate UserType to handle different db clob implementations -->
<!--frontbase
	<bean id="lobHandler" class="com.sitescape.ef.core.jdbc.FrontbaseLobHandler">
	  </bean>

-->	
	<!-- Default lob handler -->
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler">
	  </bean>

	<!-- Hibernate session factory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="lobHandler"><ref local="lobHandler"/></property>
		<property name="configLocation"><value>classpath:config/hibernate.cfg.xml</value></property>
		
		<!-- Hibernate properties are loaded from a separate file - hibernate.properties -->
	</bean>
	
	<bean id="hibernateConfiguration" class="com.sitescape.ef.util.HibernateConfigurationFactory">
		<property name="sessionFactoryBean"><ref bean="&amp;sessionFactory"/></property>
	</bean>
	
	<bean id="jbpmSessionFactory" class="org.springframework.workflow.jbpm.LocalJbpmSessionFactoryBean">
		<property name="hibernateSessionFactory"><ref local="sessionFactory"/></property>
		<property name="hibernateConfiguration"><ref local="hibernateConfiguration"/></property>
	</bean> 

	<bean id="springContextUtil" class="com.sitescape.ef.util.SpringContextUtil"/>
	
	<bean id="dataSource" class="com.sitescape.ef.util.JndiObjectFactoryBean">
		<property name="jndiName"><value>java:comp/env/jdbc/SiteScapePool</value></property>
	</bean>
  
<!-- oracle only
	<bean id="oracleExtractor" class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor">
	</bean>
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler">
		<property name="nativeJdbcExtractor"><ref local="oracleExtractor"/></property>
	  </bean>
-->

	<bean id="performanceMonitorInterceptor" class="org.springframework.aop.interceptor.PerformanceMonitorInterceptor">
	</bean>
	<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="dataSource"><ref local="dataSource"/></property>
		<property name="autoStartup"><value>true</value></property>
		<property name="startupDelay"><value>30</value></property>
		<property name="schedulerName"><value>Sitescape</value></property>
		<property name="quartzProperties">
		<props>
			<prop key="org.quartz.threadPool.makeThreadsDaemons">true</prop>
			<prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.MSSQLDelegate</prop>
			<prop key="org.quartz.jobStore.tablePrefix">SSQRTZ_</prop>
			<prop key="org.quartz.plugin.triggHistory.class">org.quartz.plugins.history.LoggingJobHistoryPlugin</prop>
			<prop key="org.quartz.jobStore.selectWithLockSQL">SELECT * FROM {0}LOCKS WITH (UPDLOCK ROWLOCK) WHERE LOCK_NAME = ?</prop>
		</props>
		</property>
		<property name="jobListeners">
			<list>
			<bean class="com.sitescape.ef.jobs.CleanupJobListener"/>
			</list>
		</property>
	</bean>

	<bean id="baseTransactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
			abstract="true">
		<property name="transactionManager"><ref bean="transactionManager"/></property>
		<property name="preInterceptors">
			<list>
				<ref bean="performanceMonitorInterceptor"/>
				<ref bean="indexSynchronizationManagerInterceptor"/>
			</list>
		</property>
		<!-- Warning: When used with jta, specified isolation levels are ignored and ISOLATION_DEFAULT is used instead. -->
		<property name="transactionAttributes">
			<props>
				<prop key="add*">PROPAGATION_REQUIRED,ISOLATION_READ_COMMITTED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED,ISOLATION_READ_COMMITTED</prop>
				<prop key="modify*">PROPAGATION_REQUIRED,ISOLATION_READ_COMMITTED</prop>
				<prop key="update*">PROPAGATION_REQUIRED,ISOLATION_READ_COMMITTED</prop>
				<prop key="create*">PROPAGATION_REQUIRED,ISOLATION_READ_COMMITTED</prop>
				<prop key="set*">PROPAGATION_REQUIRED,ISOLATION_READ_COMMITTED</prop>
				<prop key="bulk*">PROPAGATION_REQUIRES_NEW,ISOLATION_READ_COMMITTED</prop>
				<prop key="show*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>

	<bean id="modelProcessorManager" class="com.sitescape.ef.modelprocessor.ProcessorManager">
		<property name="config">
			<bean class="com.sitescape.ef.util.DefaultMergeableXmlClassPathConfigFiles">
				<property name="configFiles">
					<list>
						<value>config/model-processor-mapping.xml</value>
					</list>		
				</property>
				<property name="validating"><value>true</value></property>
			</bean>
		</property>
	</bean>
	
	<bean id="nlt" class="com.sitescape.ef.util.NLT"/>
		
	<bean id="configPropsUtil" class="com.sitescape.ef.util.ConfigPropsUtil">
		<property name="propertiesMap">
			<map>
				<entry key="request.env.print"><value>false</value></entry>
			</map>
		</property>
	</bean>
		
	<!-- ========================= Portlet Common Infrastructural Beans ======================== -->
	
	<!-- Portlet Parameter-based Mapping Interceptor -->
	<bean id="portletParameterMappingInterceptor" class="org.springframework.web.portlet.handler.ParameterMappingInterceptor"/>

	<!-- Template for the Portlet Mode - Parameter Handler Mapping Beans -->
	<bean id="portletModeParameterHandlerMappingTemplate" class="org.springframework.web.portlet.handler.PortletModeParameterHandlerMapping" lazy-init="true" abstract="true">
        <property name="order"><value>10</value></property>
		<property name="interceptors">
			<list>
				<ref bean="portletParameterMappingInterceptor"/>
				<!-- Set up request context -->
				<ref bean="portletInitRequestContextInterceptor"/>
				<!-- Enable Open-Session-In-View pattern for Hibernate ORM.
				     This must come before userPreloadInterceptor since it
				     might need to perform DB lookup -->
				<ref bean="portletOpenSessionInViewInterceptor"/>
				<!-- Preload user object for the duration of request -->
				<ref bean="portletUserPreloadInterceptor"/>
			</list>
		</property>
	</bean>

	<!-- Template for the Portlet Mode Handler Mapping Beans -->
	<bean id="portletModeHandlerMappingTemplate" class="org.springframework.web.portlet.handler.PortletModeHandlerMapping" lazy-init="true" abstract="true">
        <property name="order"><value>20</value></property>
		<property name="interceptors">
			<list>
				<ref bean="portletInitRequestContextInterceptor"/>
				<!-- Enable Open-Session-In-View pattern for Hibernate ORM.
				     This must come before userPreloadInterceptor since it
				     might need to perform DB lookup -->
				<ref bean="portletOpenSessionInViewInterceptor"/>
				<!-- Preload user object for the duration of each request -->
				<ref bean="portletUserPreloadInterceptor"/>
			</list>
		</property>
	</bean>

	<!-- Default Exception Handler Bean -->
    <bean id="portletDefaultExceptionHandlerTemplate" class="org.springframework.web.portlet.handler.SimpleMappingExceptionResolver" lazy-init="true" abstract="true">
		<property name="defaultErrorView"><value>common/defError</value></property>
		<property name="exceptionMappings">
			<props>
				<prop key="javax.portlet.PortletSecurityException">common/notAuthorized</prop>
				<prop key="javax.portlet.UnavailableException">common/notAvailable</prop>
			</props>
		</property>  
	</bean>

	<!-- Used for open-session-in-view pattern -->
	<bean id="portletOpenSessionInViewInterceptor" class="org.springframework.web.portlet.support.hibernate3.OpenSessionInViewInterceptor">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
		<!--<property name="singleSession"><value>false</value></property>-->
	</bean>
	
	<bean id="portletInitRequestContextInterceptor" class="com.sitescape.ef.web.portlet.handler.InitRequestContextInterceptor"/>
		
	<bean id="portletUserPreloadInterceptor" class="com.sitescape.ef.web.portlet.handler.UserPreloadInterceptor">
		<property name="coreDao"><ref local="coreDao"/></property>
	</bean>	

	<!-- ============================ Indexing/Search Service =========================== -->
	
	<bean id="luceneSessionFactory" class = "com.sitescape.ef.search.local.LocalLuceneSessionFactory">
		<property name="rootDirPath"><value>/home/sitescape/lucene/</value></property>			
	</bean>
	
	<bean id="objectIndexMapping" class = "com.sitescape.ef.search.docbuilder.mapped.ObjectIndexMapping">
		<property name="mappingFilePath"><value>config/object-index-mapping.xml</value></property>
	</bean>
	
	<bean id="indexSynchronizationManager" class="com.sitescape.ef.search.IndexSynchronizationManager">
		<property name="luceneSessionFactory"><ref local="luceneSessionFactory"/></property>
	</bean>
	
	<bean id="mappedIndexDocumentBuilder" class="com.sitescape.ef.search.docbuilder.mapped.MappedIndexDocumentBuilder">
		<property name="objectIndexMapping"><ref local="objectIndexMapping"/></property>		
	</bean>

	<bean id="indexSynchronizationManagerInterceptor" class="com.sitescape.ef.search.interceptor.IndexSynchronizationManagerInterceptor">
	</bean>	
	
	<!-- ============================== Document Converter ============================ -->
	
    <bean id="docConverter" class="com.sitescape.ef.docconverter.DocConverter">
        <property name="converterConfiguration"><value>config/docconverter.cfg</value></property>
    </bean>
	
	<!-- ================================ Security Service =============================== -->
	
	<!--
	<bean id="accessControlManager" class="com.sitescape.ef.security.AccessControlManagerImpl">
		<property name="functionManager"><ref local="functionManager"/></property>
		<property name="workAreaFunctionMembershipManager"><ref local="workAreaFunctionMembershipManager"/></property>
	</bean> -->
	
	<bean id="accessControlManager" class="com.sitescape.ef.security.NullAccessControlManager">
	</bean>
	
	<bean id="aclManager" class="com.sitescape.ef.security.acl.AclManagerImpl">
	</bean>

	<bean id="functionManager" class="com.sitescape.ef.security.function.FunctionManagerImpl">
		<property name="securityDao"><ref local="securityDao"/></property>
	</bean>

	<bean id="workAreaFunctionMembershipManager" class="com.sitescape.ef.security.function.WorkAreaFunctionMembershipManagerImpl">
		<property name="securityDao"><ref local="securityDao"/></property>		
	</bean>
	
	<bean id="securityDao" class="com.sitescape.ef.security.dao.SecurityDaoImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	
	<!-- =========================== Business Components =========================== -->
	
	<!-- Template for the common dependency injection for modules.
	     This includes DAO components and a variety of other services and managers 
	     that are commonly used by modules. 
	     
	     IMPORTANT: Do NOT ever add module components to this template, since it 
	     can cause circular dependencies among modules! Instead, dependent modules 
	     must be specified under respective module bean declarations.  -->
	     
	<bean id="moduleDependencyTemplate" abstract="true">
		<property name="coreDao"><ref local="coreDao"/></property>
		<property name="folderDao"><ref local="folderDao"/></property>
		<property name="functionManager"><ref bean="functionManager"/></property>	
		<property name="accessControlManager"><ref local="accessControlManager"/></property>
		<property name="aclManager"><ref local="aclManager"/></property>
		<property name="scheduler"><ref local="scheduler"/></property>
		<property name="processorManager"><ref local="modelProcessorManager"/></property>
	</bean>
	
	<bean id="employeeModule" parent="moduleDependencyTemplate" class="com.sitescape.ef.module.sample.impl.EmployeeModuleImpl">
	</bean>
	
	<bean id="workspaceModule" parent="baseTransactionProxy">
		<property name="target">
			<bean parent="moduleDependencyTemplate" class="com.sitescape.ef.module.workspace.impl.WorkspaceModuleImpl">
			</bean>
		</property>
	</bean>

	<bean id="profileModule" parent="baseTransactionProxy">
		<property name="target">
			<bean parent="moduleDependencyTemplate" class="com.sitescape.ef.module.profile.impl.ProfileModuleImpl">
			</bean>
		</property>
	</bean>
	
	<bean id="adminModule" parent="baseTransactionProxy">
		<property name="target">
			<bean parent="moduleDependencyTemplate" class="com.sitescape.ef.module.admin.impl.AdminModuleImpl">
			</bean>
		</property>
	</bean>
	<bean id="folderModule" parent="baseTransactionProxy">
		<property name="target">
			<bean parent="moduleDependencyTemplate" class="com.sitescape.ef.module.folder.impl.FolderModuleImpl">
				<property name="definitionModule"><ref local="definitionModule"/></property>
			</bean>
		</property>
	</bean>
	<bean id="defaultFolderCoreProcessor" class="com.sitescape.ef.module.folder.impl.LibraryCoreProcessor">
		<property name="coreDao"><ref local="coreDao"/></property>
		<property name="folderDao"><ref local="folderDao"/></property>
		<property name="accessControlManager"><ref local="accessControlManager"/></property>
		<property name="aclManager"><ref local="aclManager"/></property>
		<property name="definitionModule"><ref local="definitionModule"/></property>
	</bean>

	<bean id="binderModule" parent="baseTransactionProxy">
		<property name="target">
			<bean parent="moduleDependencyTemplate" class="com.sitescape.ef.module.binder.impl.BinderModuleImpl">
			</bean>
		</property>
	</bean>

	<bean id="definitionModule" parent="baseTransactionProxy">
		<property name="target">
			<bean parent="moduleDependencyTemplate" class="com.sitescape.ef.module.definition.impl.DefinitionModuleImpl">
				<property name="definitionBuilderConfig">
					<bean class="com.sitescape.ef.util.DefaultMergeableXmlClassPathConfigFiles">
						<property name="configFiles">
							<list>
								<value>config/definition_builder_config.xml</value>
							</list>		
						</property>
						<!-- TODO: We must use validation! -->
						<property name="validating"><value>true</value></property>
					</bean>
				</property>		
			</bean>
		</property>
	</bean>
	<bean id="mimeTypes" class="org.springframework.mail.javamail.ConfigurableMimeFileTypeMap"/>

	<bean id="mailSession" class="com.sitescape.ef.util.JndiObjectFactoryBean">
		<property name="jndiName"><value>java:comp/env/mail/SiteScapeMailOut</value></property>
	</bean>
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="session"><ref local="mailSession"/></property>
		<property name="defaultEncoding"><value>utf-8</value></property>
		<property name="defaultFileTypeMap"><ref local="mimeTypes"/></property>
	</bean>
	<bean id="mailModule" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref bean="transactionManager"/>
		</property>
		<property name="target">
			<ref bean="mailTarget"/>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="sendNotifications">PROPAGATION_REQUIRES_NEW,ISOLATION_READ_COMMITTED</prop>
				<prop key="send*">PROPAGATION_REQUIRES_NEW,readOnly</prop>
			</props>
		</property>
	</bean>	
		
	<bean id="mailTarget" parent="moduleDependencyTemplate" class="com.sitescape.ef.module.mail.impl.MailModuleImpl">
		<!-- Since "mailSender" is used exclusively by this bean (i.e., it is
		     not a general purpose service), it is added here rather than 
		     to the "moduleDependencyTemplate" itself -->
		<property name="mailSender"><ref local="mailSender"/></property>
	</bean>	
	
	<bean id="defaultFolderEmailFormatter" class="com.sitescape.ef.module.mail.impl.DefaultFolderEmailFormatter"  init-method="init">
		<property name="accessControlManager"><ref local="accessControlManager"/></property>
		<property name="aclManager"><ref local="aclManager"/></property>
		<property name="configDocs">
			<bean class="com.sitescape.ef.util.XmlClassPathConfigFiles">
				<property name="configFiles">
					<list>
						<value>config/mail.cfg.xml</value>
					</list>		
				</property>
				<property name="validating"><value>false</value></property>
			</bean>
		</property>
	</bean>
	
	<bean id="ldapModule"  parent="baseTransactionProxy">
		<property name="transactionAttributes">
			<props>
				<prop key="authenticate">PROPAGATION_REQUIRES_NEW,ISOLATION_READ_COMMITTED</prop>
				<prop key="sync*">PROPAGATION_REQUIRES_NEW,ISOLATION_READ_COMMITTED</prop>
				<prop key="update*">PROPAGATION_REQUIRED,ISOLATION_READ_COMMITTED</prop>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
		<property name="target">
			<ref bean="ldapTarget"/>
		</property>
	</bean>	
		
	<bean id="ldapTarget" parent="moduleDependencyTemplate" class="com.sitescape.ef.module.ldap.impl.LdapModuleImpl" init-method="init">
		<property name="profileModule"><ref local="profileModule"/></property>
		<property name="configDocs">
			<bean class="com.sitescape.ef.util.XmlClassPathConfigFiles">
				<property name="configFiles">
					<list>
						<value>config/ldap.cfg.xml</value>
					</list>		
				</property>
				<property name="validating"><value>false</value></property>
			</bean>
		</property>
	</bean>	
	
<!-- =========================Portlet support =========================================================== -->	
	<bean id="forumActionModule" parent="baseTransactionProxy">
		<property name="target">
			<bean class="com.sitescape.ef.portlet.forum.impl.ForumActionModuleImpl">
				<property name="workspaceModule"><ref local="workspaceModule"/></property>		
				<property name="profileModule"><ref local="profileModule"/></property>		
				<property name="adminModule"><ref local="adminModule"/></property>		
				<property name="folderModule"><ref local="folderModule"/></property>		
				<property name="definitionModule"><ref local="definitionModule"/></property>		
				<property name="mailModule"><ref local="mailModule"/></property>
				<property name="coreDao"><ref local="coreDao"/></property>
			</bean>
		</property>
	</bean>

	<!-- ========================= Data Access (DAO) Components ====================== -->
	
	<bean id="coreDao" class="com.sitescape.ef.dao.impl.CoreDaoImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	<bean id="folderDao" class="com.sitescape.ef.dao.impl.FolderDaoImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
		<property name="coreDao"><ref local="coreDao"/></property>
	</bean>

	<bean id="authenticationManager" class="com.sitescape.ef.security.authentication.impl.AuthenticationManagerImpl">
		<property name="coreDao"><ref local="coreDao"/></property>
	</bean>
		<!-- ======================== Repository Services =============== -->
	
	<bean id="fileRepositoryService" class="com.sitescape.ef.repository.file.FileRepositoryService">
		<property name="rootDirPath"><value>/home/sitescape/document/</value></property>
	</bean>

	<bean id="defaultWebdavRepositoryService" class="com.sitescape.ef.repository.webdav.WebdavRepositoryService">
		<property name="webdavResourceFactory"><ref local="genericWebdavResourceFactory"/></property>
	</bean>

	<!-- =================== WebDAV Support (Client Services) ==================== -->
	
	<bean id="genericWebdavResourceFactory" class="com.sitescape.ef.webdav.client.GenericWebdavResourceFactory">
		<property name="httpUrl"><value>http://peace2:8080/slide/</value></property>
		<property name="docRootDir"><value>/slide/files/sitescape/document/</value></property>
	</bean>
	
</beans>

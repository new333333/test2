<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

	<!-- MultipartResolver implementation (uses Jakarta Commons FileUpload) -->
	<bean id="multipartResolver" 
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	
		<!-- Maximum file size in bytes = Integer.MAX_VALUE = 0x7fffffff -->
		<property name="maxUploadSize">
			<value>2147483647</value>
		</property>
		<!-- Maximum allowed in-memory size in bytes before uploads are written
			 directly to disk. Keep it small so that we can handle large number
			 of large files concurrently using small memory footprint. -->
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
		<!-- Temporary directory where uploaded files get stored. Temporary
			 files are automatically cleared upon completion of request so
			 they'd better be moved or copied to somewhere else before they
			 are gone. -->
		<property name="uploadTempDir">
			<value>WEB-INF/tmp</value>
		</property>	
	</bean>

	<!-- Handler mapping implementation that maps from URLs to request handler beans -->
	<bean id="defaultHandlerMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="interceptors">
			<list>
				<!-- Set up RequestContext -->
				<ref bean="initRequestContextInterceptor"/>
				<!-- Enable Open-Session-In-View pattern for Hibernate ORM.
				     This must come before userPreloadInterceptor since it
				     might need to perform DB lookup -->
				<ref bean="openSessionInViewInterceptor"/>
				<!-- Preload user object for the duration of each request -->
				<ref bean="userPreloadInterceptor"/>
			</list>
		</property>
		<property name="urlMap">
			<map>
				<entry key="/downloadFile"><ref local="downloadFile"/></entry>				
				<entry key="/uploadFile"><ref local="uploadFile"/></entry>				
				<entry key="/viewFile"><ref local="viewFile"/></entry>				
				<entry key="/viewCss"><ref local="viewCss"/></entry>				
				<entry key="/viewFragment"><ref local="viewFragment"/></entry>
			</map>
		</property>
	</bean>

	<bean id="initRequestContextInterceptor" class="com.sitescape.ef.web.servlet.handler.InitRequestContextInterceptor"/>

	<bean id="openSessionInViewInterceptor" class="com.sitescape.ef.web.servlet.handler.OpenSessionInViewInterceptor">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
		<property name="workflowFactory"><ref bean="workflowFactory"/></property>
		<!--<property name="singleSession"><value>false</value></property>-->
	</bean>
	
	<bean id="userPreloadInterceptor" class="com.sitescape.ef.web.servlet.handler.UserPreloadInterceptor">
		<property name="coreDao"><ref bean="coreDao"/></property>
	</bean>	

	<!-- Handler Exception Resolver -->
	<bean id="handlerExceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="com.sitescape.ef.exception.CheckedCodedException">common/servlet.defCodedError</prop>
				<prop key="com.sitescape.ef.exception.UncheckedCodedException">common/servlet.defCodedError</prop>
			</props>
		</property>
		<property name="defaultErrorView"><value>common/defError</value></property>
	</bean>

	<!-- Controllers -->

	<bean id="downloadFile" parent="controllerDependencyTemplate" class="com.sitescape.ef.servlet.sample.DownloadFileController"/>
	<bean id="uploadFile" parent="controllerDependencyTemplate" class="com.sitescape.ef.servlet.sample.UploadFileController"/>
	<bean id="viewFile" parent="controllerDependencyTemplate" class="com.sitescape.ef.servlet.forum.ViewFileController"/>
	<bean id="viewCss" parent="controllerDependencyTemplate" class="com.sitescape.ef.servlet.forum.ViewCssController"/>
	<bean id="viewFragment" parent="controllerDependencyTemplate" class="com.sitescape.ef.servlet.widget_test.FragmentController"/>

</beans>

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

	<!-- MultipartResolver implementation (uses Jakarta Commons FileUpload) -->
	<bean id="multipartResolver" 
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	
		<!-- Maximum file size in bytes = Integer.MAX_VALUE = 0x7fffffff -->
		<property name="maxUploadSize">
			<value>2147483647</value>
		</property>
		<!-- Maximum allowed in-memory size in bytes before uploads are written
			 directly to disk. Keep it small so that we can handle large number
			 of large files concurrently using small memory footprint. -->
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
		<!-- Temporary directory where uploaded files get stored. Temporary
			 files are automatically cleared upon completion of request so
			 they'd better be moved or copied to somewhere else before they
			 are gone. -->
		<property name="uploadTempDir">
			<value>WEB-INF/tmp</value>
		</property>	
		<property name="defaultEncoding">
			<value>${web.char.encoding}</value>
		</property>
	</bean>

	<!-- Handler mapping implementation that maps from URLs to request handler beans -->
	<bean id="defaultHandlerMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="interceptors">
			<list>
				<!-- We do not need LoginCheckInterceptor here, because
				     1. Under Liferay, the login filter will redirect unauthenticated 
				     user to Liferay's login page.
				     1. Under JBoss Portal, all servlets require authentication first.
				     So in both cases, by the time these handlers are executed, we
				     can safely assume that the user has already been authenticated. -->
				<!-- Set up RequestContext -->
				<ref bean="initRequestContextInterceptor"/>
				<!-- Enable Open-Session-In-View pattern for Hibernate ORM.
				     This must come before userPreloadInterceptor since it
				     might need to perform DB lookup -->
				<ref bean="openSessionInViewInterceptor"/>
				<!-- Preload user object for the duration of each request -->
				<ref bean="userPreloadInterceptor"/>
			</list>
		</property>
		<property name="urlMap">
			<map>
				<entry key="/downloadFile"><ref local="downloadFile"/></entry>				
				<entry key="/uploadFile"><ref local="uploadFile"/></entry>				
				<entry key="/viewFile"><ref local="viewFile"/></entry>
				<entry key="/rssFeed"><ref local="rssFeed"/></entry>				
				<entry key="/viewCss"><ref local="viewCss"/></entry>				
				<entry key="/viewDefinitionXml"><ref local="viewDefinitionXml"/></entry>				
				<entry key="/viewFragment"><ref local="viewFragment"/></entry>
				<entry key="/errorHandler"><ref local="errorHandler"/></entry>
			</map>
		</property>
	</bean>

	<bean id="initRequestContextInterceptor" class="com.sitescape.team.web.servlet.handler.InitRequestContextInterceptor"/>

	<bean id="openSessionInViewInterceptor" class="com.sitescape.team.web.servlet.handler.OpenSessionInViewInterceptor">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
		<!--<property name="singleSession"><value>false</value></property>-->
	</bean>
	
	<bean id="userPreloadInterceptor" class="com.sitescape.team.web.servlet.handler.UserPreloadInterceptor">
		<property name="profileDao"><ref bean="profileDao"/></property>
		<property name="profileModule"><ref bean="profileModule"/></property>
	</bean>	

	<!-- Handler Exception Resolver -->
	<bean id="handlerExceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="com.sitescape.team.exception.CheckedCodedException">common/servlet.defCodedError</prop>
				<prop key="com.sitescape.team.exception.UncheckedCodedException">common/servlet.defCodedError</prop>
			</props>
		</property>
		<property name="defaultErrorView"><value>common/defError</value></property>
	</bean>

	<!-- Controllers -->

	<bean id="downloadFile" parent="controllerDependencyTemplate" class="com.sitescape.team.servlet.sample.DownloadFileController"/>
	<bean id="uploadFile" parent="controllerDependencyTemplate" class="com.sitescape.team.servlet.sample.UploadFileController"/>
	<bean id="viewFile" parent="controllerDependencyTemplate" class="com.sitescape.team.servlet.forum.ViewFileController"/>
	<bean id="rssFeed" parent="controllerDependencyTemplate" class="com.sitescape.team.servlet.forum.ViewRssController"/>
	<bean id="viewCss" parent="controllerDependencyTemplate" class="com.sitescape.team.servlet.forum.ViewCssController"/>
	<bean id="viewDefinitionXml" parent="controllerDependencyTemplate" class="com.sitescape.team.servlet.definition.ViewDefinitionXmlController"/>
	<bean id="viewFragment" parent="controllerDependencyTemplate" class="com.sitescape.team.servlet.widget_test.FragmentController"/>
	<bean id="errorHandler" parent="controllerDependencyTemplate" class="com.sitescape.team.servlet.forum.ErrorController"/>

</beans>

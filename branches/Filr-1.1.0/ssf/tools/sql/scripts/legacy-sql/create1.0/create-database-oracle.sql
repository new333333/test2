drop user sitescape cascade;
create user sitescape identified by sitescape;
grant connect, resource to sitescape;

connect sitescape/sitescape;
create table SS_Attachments (id char(32) not null, type char(1 char) not null, lockVersion number(19,0) not null, folderEntry number(19,0), principal number(19,0), binder number(19,0), ownerType varchar2(16 char), ownerId number(19,0), owningBinderKey varchar2(255 char), owningBinderId number(19,0), name varchar2(64 char), creation_date timestamp, creation_principal number(19,0), modification_date timestamp, modification_principal number(19,0), fileName varchar2(255 char), fileLength number(19,0), lastVersion number(10,0), repositoryName varchar2(128 char), filelock_id varchar2(128 char), filelock_subject varchar2(192 char), filelock_owner number(19,0), filelock_expirationDate timestamp, filelock_ownerInfo varchar2(256 char), filelock_dirty number(1,0), versionNumber number(10,0), versionName varchar2(256 char), parentAttachment char(32), primary key (id));
create table SS_AuditTrail (id char(32) not null, type char(1 char) not null, entityId number(19,0), entityType varchar2(16 char), owningBinderId number(19,0), owningBinderKey varchar2(255 char), startBy number(19,0), startDate timestamp, endBy number(19,0), endDate timestamp, description varchar2(512 char), transactionType varchar2(16 char), fileId char(32), tokenId number(19,0), state varchar2(64 char), threadName varchar2(64 char), definitionId varchar2(32 char), ended number(1,0), primary key (id));
create table SS_ChangeLogs (id char(32) not null, zoneId number(19,0), docNumber varchar2(512 char), userName varchar2(82 char), userId number(19,0), operationDate timestamp, operation varchar2(32 char), version number(19,0), xmlString clob, entityId number(19,0), entityType varchar2(16 char), owningBinderId number(19,0), owningBinderKey varchar2(255 char), primary key (id));
create table SS_CustomAttributes (id char(32) not null, type char(1 char) not null, folderEntry number(19,0), principal number(19,0), binder number(19,0), ownerType varchar2(16 char), ownerId number(19,0), owningBinderKey varchar2(255 char), owningBinderId number(19,0), name varchar2(64 char), stringValue varchar2(2000 char), description_text clob, description_format number(10,0), longValue number(19,0), dateValue timestamp, serializedValue blob, xmlValue clob, booleanValue number(1,0), valueType number(10,0), position number(10,0), parent char(32), primary key (id));
create table SS_Dashboards (id char(32) not null, type varchar2(1 char) not null, lockVersion number(19,0) not null, nextComponentId number(10,0), showComponents number(1,0), version number(10,0), properties blob, creation_date timestamp, creation_principal number(19,0), modification_date timestamp, modification_principal number(19,0), owner_id number(19,0), owner_type number(10,0), binderId number(19,0), portletName varchar2(256 char), primary key (id));
create table SS_DefinitionMap (binder number(19,0) not null, definition char(32) not null, position number(10,0) not null, primary key (binder, position));
create table SS_Definitions (id char(32) not null, lockVersion number(19,0) not null, name varchar2(64 char), title varchar2(128 char), type number(10,0), internalId varchar2(32 char), visibility number(10,0), zoneId number(19,0) not null, encoding blob, creation_date timestamp, creation_principal number(19,0), modification_date timestamp, modification_principal number(19,0), primary key (id));
create table SS_Events (id char(32) not null, lockVersion number(19,0) not null, folderEntry number(19,0), principal number(19,0), binder number(19,0), ownerType varchar2(16 char), ownerId number(19,0), owningBinderKey varchar2(255 char), owningBinderId number(19,0), name varchar2(64 char), dtStart timestamp not null, dtEnd timestamp, frequency number(10,0), repeatInterval number(10,0), until timestamp, repeatCount number(10,0), weekStart number(10,0), timeZoneSensitive number(1,0), days varchar2(100 char), monthDay varchar2(100 char), yearDay varchar2(100 char), weekNo varchar2(100 char), months varchar2(100 char), minutes varchar2(100 char), hours varchar2(100 char), duration varchar2(32 char) not null, creation_date timestamp, creation_principal number(19,0), modification_date timestamp, modification_principal number(19,0), timeZone varchar2(16 char), primary key (id));
create table SS_FolderEntries (id number(19,0) not null, lockVersion number(19,0) not null, deleted number(1,0), reserved_date timestamp, reserved_principal number(19,0), entry_level number(10,0), entry_sortKey varchar2(255 char) unique, owningBinderKey varchar2(255 char), lastActivity timestamp, logVersion number(19,0), replyCount number(10,0), nextDescendant number(10,0), totalReplyCount number(10,0), postedBy varchar2(256 char), topEntry number(19,0), parentEntry number(19,0), wrk_date timestamp, wrk_principal number(19,0), parentBinder number(19,0), description_text clob, description_format number(10,0), title varchar2(255 char), normalTitle varchar2(255 char), iconName varchar2(64 char), entryDef char(32), creation_date timestamp, creation_principal number(19,0), modification_date timestamp, modification_principal number(19,0), definitionType number(10,0), ratings_average double precision, ratings_count number(19,0), popularity number(19,0), primary key (id));
create table SS_Forums (id number(19,0) not null, type varchar2(16 char) not null, lockVersion number(19,0) not null, zoneId number(19,0) not null, library number(1,0), deleted number(1,0), uniqueTitles number(1,0), logVersion number(19,0), upgradeVersion number(10,0), mirrored number(1,0), binderCount number(10,0), resourceDriverName varchar2(64 char), resourcePath varchar2(1024 char), parentBinder number(19,0), owner number(19,0), name varchar2(128 char), pathName varchar2(1024 char), notify_teamOn number(1,0), notify_style number(10,0), notify_email clob, notify_fromAddress varchar2(128 char), notify_subject varchar2(128 char), posting char(32), properties blob, functionMembershipInherited number(1,0) not null, definitionsInherited number(1,0), definitionType number(10,0), teamMembershipInherited number(1,0), ratings_average double precision, ratings_count number(19,0), popularity number(19,0), description_text clob, description_format number(10,0), title varchar2(255 char), normalTitle varchar2(255 char), iconName varchar2(64 char), internalId varchar2(32 char), nextBinderNumber number(10,0), binder_level number(10,0), binder_sortKey varchar2(255 char) unique, entryDef char(32), creation_date timestamp, creation_principal number(19,0), modification_date timestamp, modification_principal number(19,0), topFolder number(19,0), nextEntryNumber number(10,0), entryRootKey char(15), searchTitle varchar2(255 char), templateTitle varchar2(128 char), tDescription_text clob, tDescription_format number(10,0), primary key (id));
create table SS_FunctionOperations (functionId number(19,0) not null, operationName varchar2(128 char) not null, primary key (functionId, operationName));
create table SS_Functions (id number(19,0) not null, lockVersion number(19,0) not null, zoneId number(19,0) not null, name varchar2(128 char) not null, primary key (id), unique (zoneId, name));
create table SS_LibraryEntries (binderId number(19,0) not null, type number(19,0) not null, name varchar2(255 char) not null, entityId number(19,0), primary key (binderId, type, name));
create table SS_LicenseStats (id char(32) not null, zoneId number(19,0) not null, snapshotDate timestamp, internalUserCount number(19,0), externalUserCount number(19,0), checksum number(19,0), primary key (id));
create table SS_Notifications (binderId number(19,0) not null, principalId number(19,0) not null);
create table SS_Postings (id char(32) not null, lockVersion number(19,0) not null, enabled number(1,0), emailAddress varchar2(256 char), password varchar2(64 char), zoneId number(19,0) not null, binder number(19,0), definition char(32), replyPostingOption number(10,0), primary key (id));
create table SS_PrincipalMembership (userId number(19,0) not null, groupId number(19,0) not null, primary key (userId, groupId));
create table SS_Principals (id number(19,0) not null, type varchar2(16 char) not null, lockVersion number(19,0) not null, workspaceId number(19,0), internalId varchar2(32 char), deleted number(1,0), disabled number(1,0), zoneId number(19,0), logVersion number(19,0), emailAddress varchar2(256 char), name varchar2(128 char), foreignName varchar2(128 char), theme varchar2(64 char), parentBinder number(19,0), description_text clob, description_format number(10,0), title varchar2(255 char), normalTitle varchar2(255 char), iconName varchar2(64 char), definitionType number(10,0), entryDef char(32), creation_date timestamp, creation_principal number(19,0), modification_date timestamp, modification_principal number(19,0), displayStyle varchar2(16 char), loginDate timestamp, firstName varchar2(64 char), lastName varchar2(64 char), middleName varchar2(64 char), organization varchar2(256 char), phone varchar2(128 char), zonName varchar2(100 char), password varchar2(64 char), timeZone varchar2(80 char), locale varchar2(32 char), digestSeed number(19,0), primary key (id), unique (zoneId, foreignName), unique (zoneId, name));
create table SS_Ratings (principalId number(19,0) not null, entityId number(19,0) not null, entityType number(10,0) not null, rating number(19,0), readCount number(19,0), primary key (principalId, entityId, entityType));
create table SS_SeenMap (principalId number(19,0) not null, seenMap blob not null, lastPrune timestamp, primary key (principalId));
create table SS_Subscriptions (principalId number(19,0) not null, entityId number(19,0) not null, entityType number(10,0) not null, style number(10,0), primary key (principalId, entityId, entityType));
create table SS_Tags (id char(32) not null, entity_id number(19,0), entity_type number(10,0), owner_id number(19,0), owner_type number(10,0), name varchar2(64 char), isPublic number(1,0), primary key (id));
create table SS_UserProperties (principalId number(19,0) not null, binderId number(19,0) not null, properties blob not null, primary key (principalId, binderId));
create table SS_WorkAreaFunctionMembers (workAreaFunctionMembershipId number(19,0) not null, memberId number(19,0) not null, primary key (workAreaFunctionMembershipId, memberId));
create table SS_WorkAreaFunctionMemberships (id number(19,0) not null, lockVersion number(19,0) not null, workAreaId number(19,0) not null, workAreaType varchar2(16 char) not null, zoneId number(19,0) not null, functionId number(19,0) not null, primary key (id));
create table SS_WorkflowMap (binder number(19,0) not null, workflowDefinition char(32) not null, entryDefinition varchar2(32 char) not null, primary key (binder, entryDefinition));
create table SS_WorkflowResponses (id char(32) not null, folderEntry number(19,0), principal number(19,0), binder number(19,0), ownerType varchar2(16 char), ownerId number(19,0), owningBinderKey varchar2(255 char), owningBinderId number(19,0), name varchar2(64 char), response varchar2(2000 char), definitionId varchar2(32 char), responderId number(19,0), responseDate timestamp, primary key (id));
create table SS_WorkflowStates (tokenId number(19,0) not null, lockVersion number(19,0) not null, folderEntry number(19,0), principal number(19,0), binder number(19,0), ownerType varchar2(16 char), ownerId number(19,0), owningBinderKey varchar2(255 char), owningBinderId number(19,0), wrk_date timestamp, wrk_principal number(19,0), state varchar2(64 char), threadName varchar2(64 char), timerId number(19,0), definition char(32), primary key (tokenId));
create index owningAttachment_Att on SS_Attachments (parentAttachment);
create index entityOwner_Att on SS_Attachments (ownerType, ownerId);
create index ownerBinder_Att on SS_Attachments (binder);
create index ownerPrincipal_Att on SS_Attachments (principal);
create index ownerFolderEntry_Att on SS_Attachments (folderEntry);
create index owningBinder_Att on SS_Attachments (owningBinderId);
alter table SS_Attachments add constraint FKA1AD4C3194B81781 foreign key (parentAttachment) references SS_Attachments;
alter table SS_Attachments add constraint FKA1AD4C3193118767 foreign key (creation_principal) references SS_Principals;
alter table SS_Attachments add constraint FKA1AD4C319C2BF2C9 foreign key (binder) references SS_Forums;
alter table SS_Attachments add constraint FKA1AD4C31DB0761E4 foreign key (modification_principal) references SS_Principals;
alter table SS_Attachments add constraint FKA1AD4C3165C1AB13 foreign key (folderEntry) references SS_FolderEntries;
alter table SS_Attachments add constraint FKA1AD4C317488E8C7 foreign key (principal) references SS_Principals;
alter table SS_Attachments add constraint FKA1AD4C31F93A11B4 foreign key (filelock_owner) references SS_Principals;
create index owningBinder_cAtt on SS_CustomAttributes (owningBinderId);
create index ownerBinder_cAtt on SS_CustomAttributes (binder);
create index ownerPrincipal_cAtt on SS_CustomAttributes (principal);
create index owningAttribute_cAtt on SS_CustomAttributes (parent);
create index ownerFolderEntry_cAtt on SS_CustomAttributes (folderEntry);
create index entityOwner_cAtt on SS_CustomAttributes (ownerType, ownerId);
alter table SS_CustomAttributes add constraint FK476EDFC79C2BF2C9 foreign key (binder) references SS_Forums;
alter table SS_CustomAttributes add constraint FK476EDFC765C1AB13 foreign key (folderEntry) references SS_FolderEntries;
alter table SS_CustomAttributes add constraint FK476EDFC77488E8C7 foreign key (principal) references SS_Principals;
alter table SS_CustomAttributes add constraint FK476EDFC76C866300 foreign key (parent) references SS_CustomAttributes;
create index ownerKey_Dash on SS_Dashboards (owner_id, owner_type);
alter table SS_Dashboards add constraint FKFA9653BE93118767 foreign key (creation_principal) references SS_Principals;
alter table SS_Dashboards add constraint FKFA9653BEDB0761E4 foreign key (modification_principal) references SS_Principals;
alter table SS_DefinitionMap add constraint FK170F74A9C2BF2C9 foreign key (binder) references SS_Forums;
alter table SS_DefinitionMap add constraint FK170F74ACC076F9B foreign key (definition) references SS_Definitions;
alter table SS_Definitions add constraint FK7B56F60193118767 foreign key (creation_principal) references SS_Principals;
alter table SS_Definitions add constraint FK7B56F601DB0761E4 foreign key (modification_principal) references SS_Principals;
create index ownerFolderEntry_Event on SS_Events (folderEntry);
create index entityOwner_Event on SS_Events (ownerType, ownerId);
create index ownerBinder_Event on SS_Events (binder);
create index ownerPrincipal_Event on SS_Events (principal);
create index owningBinder_Event on SS_Events (owningBinderId);
alter table SS_Events add constraint FKDE0E53F893118767 foreign key (creation_principal) references SS_Principals;
alter table SS_Events add constraint FKDE0E53F89C2BF2C9 foreign key (binder) references SS_Forums on delete cascade;
alter table SS_Events add constraint FKDE0E53F8DB0761E4 foreign key (modification_principal) references SS_Principals;
alter table SS_Events add constraint FKDE0E53F865C1AB13 foreign key (folderEntry) references SS_FolderEntries on delete cascade;
alter table SS_Events add constraint FKDE0E53F87488E8C7 foreign key (principal) references SS_Principals on delete cascade;
create index owningEntry_fEntry on SS_FolderEntries (topEntry);
create index owningFolder_fEntry on SS_FolderEntries (parentBinder);
create index owningBinderKey_fEntry on SS_FolderEntries (owningBinderKey);
alter table SS_FolderEntries add constraint FKA6632C83F7719C70 foreign key (reserved_principal) references SS_Principals;
alter table SS_FolderEntries add constraint FKA6632C832592FE8C foreign key (topEntry) references SS_FolderEntries;
alter table SS_FolderEntries add constraint FKA6632C8393118767 foreign key (creation_principal) references SS_Principals;
alter table SS_FolderEntries add constraint FKA6632C83DB0761E4 foreign key (modification_principal) references SS_Principals;
alter table SS_FolderEntries add constraint FKA6632C838BB3889B foreign key (entryDef) references SS_Definitions;
alter table SS_FolderEntries add constraint FKA6632C839BAA0457 foreign key (parentEntry) references SS_FolderEntries;
alter table SS_FolderEntries add constraint FKA6632C83A3644438 foreign key (wrk_principal) references SS_Principals;
alter table SS_FolderEntries add constraint FKA6632C83475453F3 foreign key (parentBinder) references SS_Forums;
create index owningBinder_Binder on SS_Forums (parentBinder);
alter table SS_Forums add constraint FKDF668A5193118767 foreign key (creation_principal) references SS_Principals;
alter table SS_Forums add constraint FKDF668A51B356319A foreign key (posting) references SS_Postings;
alter table SS_Forums add constraint FKDF668A51DB0761E4 foreign key (modification_principal) references SS_Principals;
alter table SS_Forums add constraint FKDF668A518BB3889B foreign key (entryDef) references SS_Definitions;
alter table SS_Forums add constraint FKDF668A51E6DE6B4C foreign key (owner) references SS_Principals;
alter table SS_Forums add constraint FKDF668A51475453F3 foreign key (parentBinder) references SS_Forums;
alter table SS_Forums add constraint FKDF668A518D8ADE6 foreign key (topFolder) references SS_Forums;
alter table SS_FunctionOperations add constraint FKBEF256434C758408 foreign key (functionId) references SS_Functions;
alter table SS_Notifications add constraint FK9131F92926FD3D64 foreign key (binderId) references SS_Forums;
alter table SS_Notifications add constraint FK9131F9296EADA262 foreign key (principalId) references SS_Principals;
alter table SS_Postings add constraint FKB05DE4909C2BF2C9 foreign key (binder) references SS_Forums;
alter table SS_Postings add constraint FKB05DE490CC076F9B foreign key (definition) references SS_Definitions;
alter table SS_PrincipalMembership add constraint FK176F6225AEB5AABF foreign key (userId) references SS_Principals;
alter table SS_PrincipalMembership add constraint FK176F6225197D4C44 foreign key (groupId) references SS_Principals;
alter table SS_Principals add constraint FK7693816493118767 foreign key (creation_principal) references SS_Principals;
alter table SS_Principals add constraint FK76938164DB0761E4 foreign key (modification_principal) references SS_Principals;
alter table SS_Principals add constraint FK769381648BB3889B foreign key (entryDef) references SS_Definitions;
alter table SS_Principals add constraint FK76938164475453F3 foreign key (parentBinder) references SS_Forums;
alter table SS_WorkAreaFunctionMembers add constraint FK72202A04A3D23110 foreign key (workAreaFunctionMembershipId) references SS_WorkAreaFunctionMemberships;
alter table SS_WorkflowMap add constraint FK33D2499E5123E49A foreign key (workflowDefinition) references SS_Definitions;
alter table SS_WorkflowMap add constraint FK33D2499E9C2BF2C9 foreign key (binder) references SS_Forums;
create index ownerBinder on SS_WorkflowResponses (binder);
create index owningBinder on SS_WorkflowResponses (owningBinderId);
create index ownerPrincipal on SS_WorkflowResponses (principal);
create index entityOwner on SS_WorkflowResponses (ownerType, ownerId);
create index ownerFolderEntry on SS_WorkflowResponses (folderEntry);
alter table SS_WorkflowResponses add constraint FKC44C5F149C2BF2C9 foreign key (binder) references SS_Forums;
alter table SS_WorkflowResponses add constraint FKC44C5F1465C1AB13 foreign key (folderEntry) references SS_FolderEntries on delete cascade;
alter table SS_WorkflowResponses add constraint FKC44C5F147488E8C7 foreign key (principal) references SS_Principals;
create index ownerFolderEntry_wState on SS_WorkflowStates (folderEntry);
create index ownerPrincipal_wState on SS_WorkflowStates (principal);
create index owningBinder_wState on SS_WorkflowStates (owningBinderId);
create index entityOwner_wState on SS_WorkflowStates (ownerType, ownerId);
create index ownerBinder_wState on SS_WorkflowStates (binder);
alter table SS_WorkflowStates add constraint FK8FA8AA809C2BF2C9 foreign key (binder) references SS_Forums;
alter table SS_WorkflowStates add constraint FK8FA8AA8065C1AB13 foreign key (folderEntry) references SS_FolderEntries on delete cascade;
alter table SS_WorkflowStates add constraint FK8FA8AA80A3644438 foreign key (wrk_principal) references SS_Principals;
alter table SS_WorkflowStates add constraint FK8FA8AA807488E8C7 foreign key (principal) references SS_Principals;
alter table SS_WorkflowStates add constraint FK8FA8AA80CC076F9B foreign key (definition) references SS_Definitions;
create sequence hibernate_sequence;
create sequence ss_binder_id_sequence;
create sequence ss_folderentry_id_sequence;
create sequence ss_principal_id_sequence;
create table JBPM_ACTION (ID_ number(19,0) not null, class char(1 char) not null, NAME_ varchar2(255 char), ISPROPAGATIONALLOWED_ number(1,0), ACTIONEXPRESSION_ varchar2(255 char), ISASYNC_ number(1,0), REFERENCEDACTION_ number(19,0), ACTIONDELEGATION_ number(19,0), EVENT_ number(19,0), PROCESSDEFINITION_ number(19,0), TIMERNAME_ varchar2(255 char), DUEDATE_ varchar2(255 char), REPEAT_ varchar2(255 char), TRANSITIONNAME_ varchar2(255 char), TIMERACTION_ number(19,0), EXPRESSION_ varchar2(4000 char), EVENTINDEX_ number(10,0), EXCEPTIONHANDLER_ number(19,0), EXCEPTIONHANDLERINDEX_ number(10,0), primary key (ID_));
create table JBPM_BYTEARRAY (ID_ number(19,0) not null, NAME_ varchar2(255 char), FILEDEFINITION_ number(19,0), primary key (ID_));
create table JBPM_BYTEBLOCK (PROCESSFILE_ number(19,0) not null, BYTES_ raw(1024), INDEX_ number(10,0) not null, primary key (PROCESSFILE_, INDEX_));
create table JBPM_COMMENT (ID_ number(19,0) not null, VERSION_ number(10,0) not null, ACTORID_ varchar2(255 char), TIME_ timestamp, MESSAGE_ varchar2(4000 char), TOKEN_ number(19,0), TASKINSTANCE_ number(19,0), TOKENINDEX_ number(10,0), TASKINSTANCEINDEX_ number(10,0), primary key (ID_));
create table JBPM_DECISIONCONDITIONS (DECISION_ number(19,0) not null, TRANSITIONNAME_ varchar2(255 char), EXPRESSION_ varchar2(255 char), INDEX_ number(10,0) not null, primary key (DECISION_, INDEX_));
create table JBPM_DELEGATION (ID_ number(19,0) not null, CLASSNAME_ varchar2(4000 char), CONFIGURATION_ varchar2(4000 char), CONFIGTYPE_ varchar2(255 char), PROCESSDEFINITION_ number(19,0), primary key (ID_));
create table JBPM_EVENT (ID_ number(19,0) not null, EVENTTYPE_ varchar2(255 char), TYPE_ char(1 char), GRAPHELEMENT_ number(19,0), NODE_ number(19,0), PROCESSDEFINITION_ number(19,0), TRANSITION_ number(19,0), TASK_ number(19,0), primary key (ID_));
create table JBPM_EXCEPTIONHANDLER (ID_ number(19,0) not null, EXCEPTIONCLASSNAME_ varchar2(4000 char), TYPE_ char(1 char), GRAPHELEMENT_ number(19,0), NODE_ number(19,0), GRAPHELEMENTINDEX_ number(10,0), PROCESSDEFINITION_ number(19,0), TRANSITION_ number(19,0), TASK_ number(19,0), primary key (ID_));
create table JBPM_LOG (ID_ number(19,0) not null, CLASS_ char(1 char) not null, INDEX_ number(10,0), DATE_ timestamp, TOKEN_ number(19,0), PARENT_ number(19,0), SWIMLANEINSTANCE_ number(19,0), TASKINSTANCE_ number(19,0), TRANSITION_ number(19,0), VARIABLEINSTANCE_ number(19,0), MESSAGE_ varchar2(4000 char), OLDDOUBLEVALUE_ double precision, NEWDOUBLEVALUE_ double precision, OLDDATEVALUE_ timestamp, NEWDATEVALUE_ timestamp, OLDSTRINGIDCLASS_ varchar2(255 char), OLDSTRINGIDVALUE_ varchar2(255 char), NEWSTRINGIDCLASS_ varchar2(255 char), NEWSTRINGIDVALUE_ varchar2(255 char), OLDSTRINGVALUE_ varchar2(4000 char), NEWSTRINGVALUE_ varchar2(4000 char), TASKOLDACTORID_ varchar2(255 char), TASKACTORID_ varchar2(255 char), OLDBYTEARRAY_ number(19,0), NEWBYTEARRAY_ number(19,0), CHILD_ number(19,0), OLDLONGVALUE_ number(19,0), NEWLONGVALUE_ number(19,0), EXCEPTION_ varchar2(4000 char), ACTION_ number(19,0), OLDLONGIDCLASS_ varchar2(255 char), OLDLONGIDVALUE_ number(19,0), NEWLONGIDCLASS_ varchar2(255 char), NEWLONGIDVALUE_ number(19,0), SOURCENODE_ number(19,0), DESTINATIONNODE_ number(19,0), NODE_ number(19,0), ENTER_ timestamp, LEAVE_ timestamp, DURATION_ number(19,0), primary key (ID_));
create table JBPM_MESSAGE (ID_ number(19,0) not null, CLASS_ char(1 char) not null, DESTINATION_ varchar2(255 char), EXCEPTION_ varchar2(4000 char), ISSUSPENDED_ number(1,0), TOKEN_ number(19,0), TEXT_ varchar2(255 char), TRANSITIONNAME_ varchar2(255 char), TASKINSTANCE_ number(19,0), NODE_ number(19,0), ACTION_ number(19,0), primary key (ID_));
create table JBPM_MODULEDEFINITION (ID_ number(19,0) not null, CLASS_ char(1 char) not null, NAME_ varchar2(4000 char), PROCESSDEFINITION_ number(19,0), STARTTASK_ number(19,0), primary key (ID_));
create table JBPM_MODULEINSTANCE (ID_ number(19,0) not null, CLASS_ char(1 char) not null, PROCESSINSTANCE_ number(19,0), TASKMGMTDEFINITION_ number(19,0), NAME_ varchar2(255 char), primary key (ID_));
create table JBPM_NODE (ID_ number(19,0) not null, CLASS_ char(1 char) not null, NAME_ varchar2(255 char), PROCESSDEFINITION_ number(19,0), ISASYNC_ number(1,0), ACTION_ number(19,0), SUPERSTATE_ number(19,0), DECISIONEXPRESSION_ varchar2(255 char), DECISIONDELEGATION number(19,0), SUBPROCESSDEFINITION_ number(19,0), SIGNAL_ number(10,0), CREATETASKS_ number(1,0), ENDTASKS_ number(1,0), NODECOLLECTIONINDEX_ number(10,0), primary key (ID_));
create table JBPM_POOLEDACTOR (ID_ number(19,0) not null, ACTORID_ varchar2(255 char), SWIMLANEINSTANCE_ number(19,0), primary key (ID_));
create table JBPM_PROCESSDEFINITION (ID_ number(19,0) not null, NAME_ varchar2(255 char), VERSION_ number(10,0), ISTERMINATIONIMPLICIT_ number(1,0), STARTSTATE_ number(19,0), primary key (ID_));
create table JBPM_PROCESSINSTANCE (ID_ number(19,0) not null, VERSION_ number(10,0) not null, START_ timestamp, END_ timestamp, ISSUSPENDED_ number(1,0), PROCESSDEFINITION_ number(19,0), ROOTTOKEN_ number(19,0), SUPERPROCESSTOKEN_ number(19,0), primary key (ID_));
create table JBPM_RUNTIMEACTION (ID_ number(19,0) not null, VERSION_ number(10,0) not null, EVENTTYPE_ varchar2(255 char), TYPE_ char(1 char), GRAPHELEMENT_ number(19,0), PROCESSINSTANCE_ number(19,0), ACTION_ number(19,0), PROCESSINSTANCEINDEX_ number(10,0), primary key (ID_));
create table JBPM_SWIMLANE (ID_ number(19,0) not null, NAME_ varchar2(255 char), ACTORIDEXPRESSION_ varchar2(255 char), POOLEDACTORSEXPRESSION_ varchar2(255 char), ASSIGNMENTDELEGATION_ number(19,0), TASKMGMTDEFINITION_ number(19,0), primary key (ID_));
create table JBPM_SWIMLANEINSTANCE (ID_ number(19,0) not null, NAME_ varchar2(255 char), ACTORID_ varchar2(255 char), SWIMLANE_ number(19,0), TASKMGMTINSTANCE_ number(19,0), primary key (ID_));
create table JBPM_TASK (ID_ number(19,0) not null, NAME_ varchar2(255 char), PROCESSDEFINITION_ number(19,0), DESCRIPTION_ varchar2(4000 char), ISBLOCKING_ number(1,0), ISSIGNALLING_ number(1,0), DUEDATE_ varchar2(255 char), ACTORIDEXPRESSION_ varchar2(255 char), POOLEDACTORSEXPRESSION_ varchar2(255 char), TASKMGMTDEFINITION_ number(19,0), TASKNODE_ number(19,0), STARTSTATE_ number(19,0), ASSIGNMENTDELEGATION_ number(19,0), SWIMLANE_ number(19,0), TASKCONTROLLER_ number(19,0), primary key (ID_));
create table JBPM_TASKACTORPOOL (POOLEDACTOR_ number(19,0) not null, TASKINSTANCE_ number(19,0) not null, primary key (TASKINSTANCE_, POOLEDACTOR_));
create table JBPM_TASKCONTROLLER (ID_ number(19,0) not null, TASKCONTROLLERDELEGATION_ number(19,0), primary key (ID_));
create table JBPM_TASKINSTANCE (ID_ number(19,0) not null, CLASS_ char(1 char) not null, NAME_ varchar2(255 char), DESCRIPTION_ varchar2(4000 char), ACTORID_ varchar2(255 char), CREATE_ timestamp, START_ timestamp, END_ timestamp, DUEDATE_ timestamp, PRIORITY_ number(10,0), ISCANCELLED_ number(1,0), ISSUSPENDED_ number(1,0), ISOPEN_ number(1,0), ISSIGNALLING_ number(1,0), ISBLOCKING_ number(1,0), TASK_ number(19,0), TOKEN_ number(19,0), SWIMLANINSTANCE_ number(19,0), TASKMGMTINSTANCE_ number(19,0), primary key (ID_));
create table JBPM_TIMER (ID_ number(19,0) not null, NAME_ varchar2(255 char), DUEDATE_ timestamp, REPEAT_ varchar2(255 char), TRANSITIONNAME_ varchar2(255 char), EXCEPTION_ varchar2(4000 char), ISSUSPENDED_ number(1,0), ACTION_ number(19,0), TOKEN_ number(19,0), PROCESSINSTANCE_ number(19,0), TASKINSTANCE_ number(19,0), GRAPHELEMENTTYPE_ varchar2(255 char), GRAPHELEMENT_ number(19,0), primary key (ID_));
create table JBPM_TOKEN (ID_ number(19,0) not null, VERSION_ number(10,0) not null, NAME_ varchar2(255 char), START_ timestamp, END_ timestamp, NODEENTER_ timestamp, NEXTLOGINDEX_ number(10,0), ISABLETOREACTIVATEPARENT_ number(1,0), ISTERMINATIONIMPLICIT_ number(1,0), ISSUSPENDED_ number(1,0), NODE_ number(19,0), PROCESSINSTANCE_ number(19,0), PARENT_ number(19,0), SUBPROCESSINSTANCE_ number(19,0), primary key (ID_));
create table JBPM_TOKENVARIABLEMAP (ID_ number(19,0) not null, TOKEN_ number(19,0), CONTEXTINSTANCE_ number(19,0), primary key (ID_));
create table JBPM_TRANSITION (ID_ number(19,0) not null, NAME_ varchar2(255 char), PROCESSDEFINITION_ number(19,0), FROM_ number(19,0), TO_ number(19,0), FROMINDEX_ number(10,0), primary key (ID_));
create table JBPM_VARIABLEACCESS (ID_ number(19,0) not null, VARIABLENAME_ varchar2(255 char), ACCESS_ varchar2(255 char), MAPPEDNAME_ varchar2(255 char), PROCESSSTATE_ number(19,0), TASKCONTROLLER_ number(19,0), INDEX_ number(10,0), SCRIPT_ number(19,0), primary key (ID_));
create table JBPM_VARIABLEINSTANCE (ID_ number(19,0) not null, CLASS_ char(1 char) not null, NAME_ varchar2(255 char), CONVERTER_ char(1 char), TOKEN_ number(19,0), TOKENVARIABLEMAP_ number(19,0), PROCESSINSTANCE_ number(19,0), BYTEARRAYVALUE_ number(19,0), DATEVALUE_ timestamp, DOUBLEVALUE_ double precision, LONGIDCLASS_ varchar2(255 char), LONGVALUE_ number(19,0), STRINGIDCLASS_ varchar2(255 char), STRINGVALUE_ varchar2(255 char), TASKINSTANCE_ number(19,0), primary key (ID_));
alter table JBPM_ACTION add constraint FK_ACTION_EVENT foreign key (EVENT_) references JBPM_EVENT;
alter table JBPM_ACTION add constraint FK_ACTION_EXPTHDL foreign key (EXCEPTIONHANDLER_) references JBPM_EXCEPTIONHANDLER;
alter table JBPM_ACTION add constraint FK_ACTION_PROCDEF foreign key (PROCESSDEFINITION_) references JBPM_PROCESSDEFINITION;
alter table JBPM_ACTION add constraint FK_CRTETIMERACT_TA foreign key (TIMERACTION_) references JBPM_ACTION;
alter table JBPM_ACTION add constraint FK_ACTION_ACTNDEL foreign key (ACTIONDELEGATION_) references JBPM_DELEGATION;
alter table JBPM_ACTION add constraint FK_ACTION_REFACT foreign key (REFERENCEDACTION_) references JBPM_ACTION;
alter table JBPM_BYTEARRAY add constraint FK_BYTEARR_FILDEF foreign key (FILEDEFINITION_) references JBPM_MODULEDEFINITION;
alter table JBPM_BYTEBLOCK add constraint FK_BYTEBLOCK_FILE foreign key (PROCESSFILE_) references JBPM_BYTEARRAY;
alter table JBPM_COMMENT add constraint FK_COMMENT_TOKEN foreign key (TOKEN_) references JBPM_TOKEN;
alter table JBPM_COMMENT add constraint FK_COMMENT_TSK foreign key (TASKINSTANCE_) references JBPM_TASKINSTANCE;
alter table JBPM_DECISIONCONDITIONS add constraint FK_DECCOND_DEC foreign key (DECISION_) references JBPM_NODE;
alter table JBPM_DELEGATION add constraint FK_DELEGATION_PRCD foreign key (PROCESSDEFINITION_) references JBPM_PROCESSDEFINITION;
alter table JBPM_EVENT add constraint FK_EVENT_PROCDEF foreign key (PROCESSDEFINITION_) references JBPM_PROCESSDEFINITION;
alter table JBPM_EVENT add constraint FK_EVENT_NODE foreign key (NODE_) references JBPM_NODE;
alter table JBPM_EVENT add constraint FK_EVENT_TRANS foreign key (TRANSITION_) references JBPM_TRANSITION;
alter table JBPM_EVENT add constraint FK_EVENT_TASK foreign key (TASK_) references JBPM_TASK;
alter table JBPM_LOG add constraint FK_LOG_SOURCENODE foreign key (SOURCENODE_) references JBPM_NODE;
alter table JBPM_LOG add constraint FK_LOG_TOKEN foreign key (TOKEN_) references JBPM_TOKEN;
alter table JBPM_LOG add constraint FK_LOG_OLDBYTES foreign key (OLDBYTEARRAY_) references JBPM_BYTEARRAY;
alter table JBPM_LOG add constraint FK_LOG_NEWBYTES foreign key (NEWBYTEARRAY_) references JBPM_BYTEARRAY;
alter table JBPM_LOG add constraint FK_LOG_CHILDTOKEN foreign key (CHILD_) references JBPM_TOKEN;
alter table JBPM_LOG add constraint FK_LOG_DESTNODE foreign key (DESTINATIONNODE_) references JBPM_NODE;
alter table JBPM_LOG add constraint FK_LOG_TASKINST foreign key (TASKINSTANCE_) references JBPM_TASKINSTANCE;
alter table JBPM_LOG add constraint FK_LOG_SWIMINST foreign key (SWIMLANEINSTANCE_) references JBPM_SWIMLANEINSTANCE;
alter table JBPM_LOG add constraint FK_LOG_PARENT foreign key (PARENT_) references JBPM_LOG;
alter table JBPM_LOG add constraint FK_LOG_NODE foreign key (NODE_) references JBPM_NODE;
alter table JBPM_LOG add constraint FK_LOG_ACTION foreign key (ACTION_) references JBPM_ACTION;
alter table JBPM_LOG add constraint FK_LOG_VARINST foreign key (VARIABLEINSTANCE_) references JBPM_VARIABLEINSTANCE;
alter table JBPM_LOG add constraint FK_LOG_TRANSITION foreign key (TRANSITION_) references JBPM_TRANSITION;
alter table JBPM_MESSAGE add constraint FK_MSG_TOKEN foreign key (TOKEN_) references JBPM_TOKEN;
alter table JBPM_MESSAGE add constraint FK_CMD_NODE foreign key (NODE_) references JBPM_NODE;
alter table JBPM_MESSAGE add constraint FK_CMD_ACTION foreign key (ACTION_) references JBPM_ACTION;
alter table JBPM_MESSAGE add constraint FK_CMD_TASKINST foreign key (TASKINSTANCE_) references JBPM_TASKINSTANCE;
alter table JBPM_MODULEDEFINITION add constraint FK_TSKDEF_START foreign key (STARTTASK_) references JBPM_TASK;
alter table JBPM_MODULEDEFINITION add constraint FK_MODDEF_PROCDEF foreign key (PROCESSDEFINITION_) references JBPM_PROCESSDEFINITION;
alter table JBPM_MODULEINSTANCE add constraint FK_TASKMGTINST_TMD foreign key (TASKMGMTDEFINITION_) references JBPM_MODULEDEFINITION;
alter table JBPM_MODULEINSTANCE add constraint FK_MODINST_PRCINST foreign key (PROCESSINSTANCE_) references JBPM_PROCESSINSTANCE;
alter table JBPM_NODE add constraint FK_PROCST_SBPRCDEF foreign key (SUBPROCESSDEFINITION_) references JBPM_PROCESSDEFINITION;
alter table JBPM_NODE add constraint FK_NODE_PROCDEF foreign key (PROCESSDEFINITION_) references JBPM_PROCESSDEFINITION;
alter table JBPM_NODE add constraint FK_NODE_ACTION foreign key (ACTION_) references JBPM_ACTION;
alter table JBPM_NODE add constraint FK_DECISION_DELEG foreign key (DECISIONDELEGATION) references JBPM_DELEGATION;
alter table JBPM_NODE add constraint FK_NODE_SUPERSTATE foreign key (SUPERSTATE_) references JBPM_NODE;
create index IDX_PLDACTR_ACTID on JBPM_POOLEDACTOR (ACTORID_);
alter table JBPM_POOLEDACTOR add constraint FK_POOLEDACTOR_SLI foreign key (SWIMLANEINSTANCE_) references JBPM_SWIMLANEINSTANCE;
alter table JBPM_PROCESSDEFINITION add constraint FK_PROCDEF_STRTSTA foreign key (STARTSTATE_) references JBPM_NODE;
alter table JBPM_PROCESSINSTANCE add constraint FK_PROCIN_PROCDEF foreign key (PROCESSDEFINITION_) references JBPM_PROCESSDEFINITION;
alter table JBPM_PROCESSINSTANCE add constraint FK_PROCIN_ROOTTKN foreign key (ROOTTOKEN_) references JBPM_TOKEN;
alter table JBPM_PROCESSINSTANCE add constraint FK_PROCIN_SPROCTKN foreign key (SUPERPROCESSTOKEN_) references JBPM_TOKEN;
alter table JBPM_RUNTIMEACTION add constraint FK_RTACTN_PROCINST foreign key (PROCESSINSTANCE_) references JBPM_PROCESSINSTANCE;
alter table JBPM_RUNTIMEACTION add constraint FK_RTACTN_ACTION foreign key (ACTION_) references JBPM_ACTION;
alter table JBPM_SWIMLANE add constraint FK_SWL_ASSDEL foreign key (ASSIGNMENTDELEGATION_) references JBPM_DELEGATION;
alter table JBPM_SWIMLANE add constraint FK_SWL_TSKMGMTDEF foreign key (TASKMGMTDEFINITION_) references JBPM_MODULEDEFINITION;
alter table JBPM_SWIMLANEINSTANCE add constraint FK_SWIMLANEINST_TM foreign key (TASKMGMTINSTANCE_) references JBPM_MODULEINSTANCE;
alter table JBPM_SWIMLANEINSTANCE add constraint FK_SWIMLANEINST_SL foreign key (SWIMLANE_) references JBPM_SWIMLANE;
alter table JBPM_TASK add constraint FK_TSK_TSKCTRL foreign key (TASKCONTROLLER_) references JBPM_TASKCONTROLLER;
alter table JBPM_TASK add constraint FK_TASK_ASSDEL foreign key (ASSIGNMENTDELEGATION_) references JBPM_DELEGATION;
alter table JBPM_TASK add constraint FK_TASK_TASKNODE foreign key (TASKNODE_) references JBPM_NODE;
alter table JBPM_TASK add constraint FK_TASK_PROCDEF foreign key (PROCESSDEFINITION_) references JBPM_PROCESSDEFINITION;
alter table JBPM_TASK add constraint FK_TASK_STARTST foreign key (STARTSTATE_) references JBPM_NODE;
alter table JBPM_TASK add constraint FK_TASK_TASKMGTDEF foreign key (TASKMGMTDEFINITION_) references JBPM_MODULEDEFINITION;
alter table JBPM_TASK add constraint FK_TASK_SWIMLANE foreign key (SWIMLANE_) references JBPM_SWIMLANE;
alter table JBPM_TASKACTORPOOL add constraint FK_TSKACTPOL_PLACT foreign key (POOLEDACTOR_) references JBPM_POOLEDACTOR;
alter table JBPM_TASKACTORPOOL add constraint FK_TASKACTPL_TSKI foreign key (TASKINSTANCE_) references JBPM_TASKINSTANCE;
alter table JBPM_TASKCONTROLLER add constraint FK_TSKCTRL_DELEG foreign key (TASKCONTROLLERDELEGATION_) references JBPM_DELEGATION;
create index IDX_TASK_ACTORID on JBPM_TASKINSTANCE (ACTORID_);
alter table JBPM_TASKINSTANCE add constraint FK_TASKINST_TMINST foreign key (TASKMGMTINSTANCE_) references JBPM_MODULEINSTANCE;
alter table JBPM_TASKINSTANCE add constraint FK_TASKINST_TOKEN foreign key (TOKEN_) references JBPM_TOKEN;
alter table JBPM_TASKINSTANCE add constraint FK_TASKINST_SLINST foreign key (SWIMLANINSTANCE_) references JBPM_SWIMLANEINSTANCE;
alter table JBPM_TASKINSTANCE add constraint FK_TASKINST_TASK foreign key (TASK_) references JBPM_TASK;
alter table JBPM_TIMER add constraint FK_TIMER_TOKEN foreign key (TOKEN_) references JBPM_TOKEN;
alter table JBPM_TIMER add constraint FK_TIMER_PRINST foreign key (PROCESSINSTANCE_) references JBPM_PROCESSINSTANCE;
alter table JBPM_TIMER add constraint FK_TIMER_ACTION foreign key (ACTION_) references JBPM_ACTION;
alter table JBPM_TIMER add constraint FK_TIMER_TSKINST foreign key (TASKINSTANCE_) references JBPM_TASKINSTANCE;
alter table JBPM_TOKEN add constraint FK_TOKEN_PARENT foreign key (PARENT_) references JBPM_TOKEN;
alter table JBPM_TOKEN add constraint FK_TOKEN_NODE foreign key (NODE_) references JBPM_NODE;
alter table JBPM_TOKEN add constraint FK_TOKEN_PROCINST foreign key (PROCESSINSTANCE_) references JBPM_PROCESSINSTANCE;
alter table JBPM_TOKEN add constraint FK_TOKEN_SUBPI foreign key (SUBPROCESSINSTANCE_) references JBPM_PROCESSINSTANCE;
alter table JBPM_TOKENVARIABLEMAP add constraint FK_TKVARMAP_CTXT foreign key (CONTEXTINSTANCE_) references JBPM_MODULEINSTANCE;
alter table JBPM_TOKENVARIABLEMAP add constraint FK_TKVARMAP_TOKEN foreign key (TOKEN_) references JBPM_TOKEN;
alter table JBPM_TRANSITION add constraint FK_TRANSITION_TO foreign key (TO_) references JBPM_NODE;
alter table JBPM_TRANSITION add constraint FK_TRANS_PROCDEF foreign key (PROCESSDEFINITION_) references JBPM_PROCESSDEFINITION;
alter table JBPM_TRANSITION add constraint FK_TRANSITION_FROM foreign key (FROM_) references JBPM_NODE;
alter table JBPM_VARIABLEACCESS add constraint FK_VARACC_TSKCTRL foreign key (TASKCONTROLLER_) references JBPM_TASKCONTROLLER;
alter table JBPM_VARIABLEACCESS add constraint FK_VARACC_SCRIPT foreign key (SCRIPT_) references JBPM_ACTION;
alter table JBPM_VARIABLEACCESS add constraint FK_VARACC_PROCST foreign key (PROCESSSTATE_) references JBPM_NODE;
alter table JBPM_VARIABLEINSTANCE add constraint FK_VARINST_TK foreign key (TOKEN_) references JBPM_TOKEN;
alter table JBPM_VARIABLEINSTANCE add constraint FK_VARINST_TKVARMP foreign key (TOKENVARIABLEMAP_) references JBPM_TOKENVARIABLEMAP;
alter table JBPM_VARIABLEINSTANCE add constraint FK_VARINST_PRCINST foreign key (PROCESSINSTANCE_) references JBPM_PROCESSINSTANCE;
alter table JBPM_VARIABLEINSTANCE add constraint FK_VAR_TSKINST foreign key (TASKINSTANCE_) references JBPM_TASKINSTANCE;
alter table JBPM_VARIABLEINSTANCE add constraint FK_BYTEINST_ARRAY foreign key (BYTEARRAYVALUE_) references JBPM_BYTEARRAY;
create sequence hibernate_sequence;
create sequence seq_jbpm_action;
create sequence seq_jbpm_bytearray;
create sequence seq_jbpm_comment;
create sequence seq_jbpm_delegation;
create sequence seq_jbpm_event;
create sequence seq_jbpm_exceptionhandler;
create sequence seq_jbpm_log;
create sequence seq_jbpm_moduledefinition;
create sequence seq_jbpm_moduleinstance;
create sequence seq_jbpm_node;
create sequence seq_jbpm_pooledactor;
create sequence seq_jbpm_processdefinition;
create sequence seq_jbpm_processinstance;
create sequence seq_jbpm_runtimeaction;
create sequence seq_jbpm_swimlane;
create sequence seq_jbpm_swimlaneinstance;
create sequence seq_jbpm_task;
create sequence seq_jbpm_taskcontroller;
create sequence seq_jbpm_taskinstance;
create sequence seq_jbpm_token;
create sequence seq_jbpm_tokenvariablemap;
create sequence seq_jbpm_transition;
create sequence seq_jbpm_variableaccess;
create sequence seq_jbpm_variableinstance;
CREATE TABLE SSQRTZ_job_details  (    JOB_NAME  VARCHAR2(80) NOT NULL,    JOB_GROUP VARCHAR2(80) NOT NULL,    DESCRIPTION VARCHAR2(120) NULL,    JOB_CLASS_NAME   VARCHAR2(128) NOT NULL,    IS_DURABLE VARCHAR2(1) NOT NULL,    IS_VOLATILE VARCHAR2(1) NOT NULL,    IS_STATEFUL VARCHAR2(1) NOT NULL,    REQUESTS_RECOVERY VARCHAR2(1) NOT NULL,    JOB_DATA BLOB NULL,    PRIMARY KEY (JOB_NAME,JOB_GROUP));
CREATE TABLE SSQRTZ_job_listeners  (    JOB_NAME  VARCHAR2(80) NOT NULL,    JOB_GROUP VARCHAR2(80) NOT NULL,    JOB_LISTENER VARCHAR2(80) NOT NULL,    PRIMARY KEY (JOB_NAME,JOB_GROUP,JOB_LISTENER),    FOREIGN KEY (JOB_NAME,JOB_GROUP)	REFERENCES SSQRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP));
CREATE TABLE SSQRTZ_triggers  (    TRIGGER_NAME VARCHAR2(80) NOT NULL,    TRIGGER_GROUP VARCHAR2(80) NOT NULL,    JOB_NAME  VARCHAR2(80) NOT NULL,    JOB_GROUP VARCHAR2(80) NOT NULL,    IS_VOLATILE VARCHAR2(1) NOT NULL,    DESCRIPTION VARCHAR2(120) NULL,    NEXT_FIRE_TIME NUMBER(13) NULL,    PREV_FIRE_TIME NUMBER(13) NULL,    TRIGGER_STATE VARCHAR2(16) NOT NULL,    TRIGGER_TYPE VARCHAR2(8) NOT NULL,    START_TIME NUMBER(13) NOT NULL,    END_TIME NUMBER(13) NULL,    CALENDAR_NAME VARCHAR2(80) NULL,    MISFIRE_INSTR NUMBER(2) NULL,    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),    FOREIGN KEY (JOB_NAME,JOB_GROUP)	REFERENCES SSQRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP));
CREATE TABLE SSQRTZ_simple_triggers  (    TRIGGER_NAME VARCHAR2(80) NOT NULL,    TRIGGER_GROUP VARCHAR2(80) NOT NULL,    REPEAT_COUNT NUMBER(7) NOT NULL,    REPEAT_INTERVAL NUMBER(12) NOT NULL,    TIMES_TRIGGERED NUMBER(7) NOT NULL,    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)	REFERENCES SSQRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP));
CREATE TABLE SSQRTZ_cron_triggers  (    TRIGGER_NAME VARCHAR2(80) NOT NULL,    TRIGGER_GROUP VARCHAR2(80) NOT NULL,    CRON_EXPRESSION VARCHAR2(80) NOT NULL,    TIME_ZONE_ID VARCHAR2(80),    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)	REFERENCES SSQRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP));
CREATE TABLE SSQRTZ_blob_triggers  (    TRIGGER_NAME VARCHAR2(80) NOT NULL,    TRIGGER_GROUP VARCHAR2(80) NOT NULL,    BLOB_DATA BLOB NULL,    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)        REFERENCES SSQRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP));
CREATE TABLE SSQRTZ_trigger_listeners  (    TRIGGER_NAME  VARCHAR2(80) NOT NULL,    TRIGGER_GROUP VARCHAR2(80) NOT NULL,    TRIGGER_LISTENER VARCHAR2(80) NOT NULL,    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_LISTENER),    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)	REFERENCES SSQRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP));
CREATE TABLE SSQRTZ_calendars  (    CALENDAR_NAME  VARCHAR2(80) NOT NULL,    CALENDAR BLOB NOT NULL,    PRIMARY KEY (CALENDAR_NAME));
CREATE TABLE SSQRTZ_paused_trigger_grps  (    TRIGGER_GROUP  VARCHAR2(80) NOT NULL,    PRIMARY KEY (TRIGGER_GROUP));
CREATE TABLE SSQRTZ_fired_triggers  (    ENTRY_ID VARCHAR2(95) NOT NULL,    TRIGGER_NAME VARCHAR2(80) NOT NULL,    TRIGGER_GROUP VARCHAR2(80) NOT NULL,    IS_VOLATILE VARCHAR2(1) NOT NULL,    INSTANCE_NAME VARCHAR2(80) NOT NULL,    FIRED_TIME NUMBER(13) NOT NULL,    STATE VARCHAR2(16) NOT NULL,    JOB_NAME VARCHAR2(80) NULL,    JOB_GROUP VARCHAR2(80) NULL,    IS_STATEFUL VARCHAR2(1) NULL,    REQUESTS_RECOVERY VARCHAR2(1) NULL,    PRIMARY KEY (ENTRY_ID));
CREATE TABLE SSQRTZ_scheduler_state  (    INSTANCE_NAME VARCHAR2(80) NOT NULL,    LAST_CHECKIN_TIME NUMBER(13) NOT NULL,    CHECKIN_INTERVAL NUMBER(13) NOT NULL,    RECOVERER VARCHAR2(80) NULL,    PRIMARY KEY (INSTANCE_NAME));
CREATE TABLE SSQRTZ_locks  (    LOCK_NAME  VARCHAR2(40) NOT NULL,    PRIMARY KEY (LOCK_NAME));
INSERT INTO SSQRTZ_locks values('TRIGGER_ACCESS');
INSERT INTO SSQRTZ_locks values('JOB_ACCESS');
INSERT INTO SSQRTZ_locks values('CALENDAR_ACCESS');
INSERT INTO SSQRTZ_locks values('STATE_ACCESS');
INSERT INTO SSQRTZ_locks values('MISFIRE_ACCESS');
create index idx_qrtz_j_req_recovery on SSQRTZ_job_details(REQUESTS_RECOVERY);
create index idx_qrtz_t_next_fire_time on SSQRTZ_triggers(NEXT_FIRE_TIME);
create index idx_qrtz_t_state on SSQRTZ_triggers(TRIGGER_STATE);
create index idx_qrtz_t_nft_st on SSQRTZ_triggers(NEXT_FIRE_TIME,TRIGGER_STATE);
create index idx_qrtz_t_volatile on SSQRTZ_triggers(IS_VOLATILE);
create index idx_qrtz_ft_trig_name on SSQRTZ_fired_triggers(TRIGGER_NAME);
create index idx_qrtz_ft_trig_group on SSQRTZ_fired_triggers(TRIGGER_GROUP);
create index idx_qrtz_ft_trig_nm_gp on SSQRTZ_fired_triggers(TRIGGER_NAME,TRIGGER_GROUP);
create index idx_qrtz_ft_trig_volatile on SSQRTZ_fired_triggers(IS_VOLATILE);
create index idx_qrtz_ft_trig_inst_name on SSQRTZ_fired_triggers(INSTANCE_NAME);
create index idx_qrtz_ft_job_name on SSQRTZ_fired_triggers(JOB_NAME);
create index idx_qrtz_ft_job_group on SSQRTZ_fired_triggers(JOB_GROUP);
create index idx_qrtz_ft_job_stateful on SSQRTZ_fired_triggers(IS_STATEFUL);
create index idx_qrtz_ft_job_req_recovery on SSQRTZ_fired_triggers(REQUESTS_RECOVERY);
commit;

drop database if exists sitescape;
create database sitescape character set utf8;
use sitescape;
create table SS_Attachments (id char(32) not null, type char(1) not null, lockVersion bigint not null, zoneId bigint, folderEntry bigint, principal bigint, binder bigint, ownerType varchar(16), ownerId bigint, owningBinderKey varchar(255), owningBinderId bigint, name varchar(64), creation_date datetime, creation_principal bigint, modification_date datetime, modification_principal bigint, fileName varchar(255), fileLength bigint, lastVersion integer, repositoryName varchar(128), filelock_id varchar(128), filelock_subject varchar(192), filelock_owner bigint, filelock_expirationDate datetime, filelock_ownerInfo varchar(256), filelock_dirty bit, versionNumber integer, versionName varchar(256), parentAttachment char(32), primary key (id)) ENGINE=InnoDB;
create table SS_AuditTrail (id char(32) not null, type char(1) not null, zoneId bigint, startBy bigint, startDate datetime, endBy bigint, endDate datetime, entityId bigint, entityType varchar(16), owningBinderId bigint, owningBinderKey varchar(255), description varchar(512), transactionType varchar(16), fileId char(32), tokenId bigint, state varchar(64), threadName varchar(64), definitionId varchar(32), ended bit, primary key (id)) ENGINE=InnoDB;
create table SS_ChangeLogs (id char(32) not null, zoneId bigint, docNumber varchar(512), userName varchar(82), userId bigint, operationDate datetime, operation varchar(32), version bigint, xmlString mediumtext, entityId bigint, entityType varchar(16), owningBinderId bigint, owningBinderKey varchar(255), primary key (id)) ENGINE=InnoDB;
create table SS_CustomAttributes (id char(32) not null, type char(1) not null, zoneId bigint, folderEntry bigint, principal bigint, binder bigint, ownerType varchar(16), ownerId bigint, owningBinderKey varchar(255), owningBinderId bigint, name varchar(64), stringValue varchar(2000), description_text text, description_format integer, longValue bigint, dateValue datetime, serializedValue mediumblob, xmlValue mediumtext, booleanValue bit, valueType integer, position integer, parent char(32), primary key (id)) ENGINE=InnoDB;
create table SS_Dashboards (id char(32) not null, type varchar(1) not null, lockVersion bigint not null, zoneId bigint, nextComponentId integer, showComponents bit, version integer, properties blob, creation_date datetime, creation_principal bigint, modification_date datetime, modification_principal bigint, owner_id bigint, owner_type integer, binderId bigint, portletName varchar(256), primary key (id)) ENGINE=InnoDB;
create table SS_DefinitionMap (binder bigint not null, definition char(32) not null, position integer not null, primary key (binder, position)) ENGINE=InnoDB;
create table SS_Definitions (id char(32) not null, lockVersion bigint not null, zoneId bigint not null, name varchar(64), title varchar(128), type integer, internalId varchar(32), visibility integer, encoding mediumblob, creation_date datetime, creation_principal bigint, modification_date datetime, modification_principal bigint, primary key (id), unique (zoneId, name)) ENGINE=InnoDB;
create table SS_EmailAddresses (principal bigint not null, type varchar(64) not null, zoneId bigint not null, address varchar(256), primary key (principal, type)) ENGINE=InnoDB;
create table SS_Events (id char(32) not null, lockVersion bigint not null, zoneId bigint, folderEntry bigint, principal bigint, binder bigint, ownerType varchar(16), ownerId bigint, owningBinderKey varchar(255), owningBinderId bigint, name varchar(64), dtStart datetime not null, dtEnd datetime, frequency integer, repeatInterval integer, until datetime, repeatCount integer, weekStart integer, timeZoneSensitive bit, days varchar(100), monthDay varchar(100), yearDay varchar(100), weekNo varchar(100), months varchar(100), minutes varchar(100), hours varchar(100), duration varchar(32) not null, creation_date datetime, creation_principal bigint, modification_date datetime, modification_principal bigint, timeZone varchar(16), primary key (id)) ENGINE=InnoDB;
create table SS_FolderEntries (id bigint not null auto_increment, lockVersion bigint not null, zoneId bigint, deleted bit, subscribed bit, reserved_date datetime, reserved_principal bigint, entry_level integer, entry_sortKey varchar(255) unique, owningBinderKey varchar(255), lastActivity datetime, logVersion bigint, replyCount integer, nextDescendant integer, totalReplyCount integer, postedBy varchar(256), topEntry bigint, parentEntry bigint, wrk_date datetime, wrk_principal bigint, parentBinder bigint, description_text text, description_format integer, title varchar(255), normalTitle varchar(255), iconName varchar(64), entryDef char(32), creation_date datetime, creation_principal bigint, modification_date datetime, modification_principal bigint, definitionType integer, ratings_average double precision, ratings_count bigint, popularity bigint, primary key (id)) ENGINE=InnoDB;
create table SS_Forums (id bigint not null auto_increment, type varchar(16) not null, lockVersion bigint not null, zoneId bigint not null, library bit, deleted bit, uniqueTitles bit, logVersion bigint, upgradeVersion integer, mirrored bit, binderCount integer, resourceDriverName varchar(64), resourcePath varchar(1024), parentBinder bigint, owner bigint, name varchar(128), pathName varchar(1024), notify_teamOn bit, notify_style integer, notify_email text, notify_fromAddress varchar(128), notify_subject varchar(128), posting char(32), properties blob, functionMembershipInherited bit not null, definitionsInherited bit, definitionType integer, teamMembershipInherited bit, ratings_average double precision, ratings_count bigint, popularity bigint, description_text text, description_format integer, title varchar(255), normalTitle varchar(255), iconName varchar(64), internalId varchar(32), nextBinderNumber integer, binder_level integer, binder_sortKey varchar(255) unique, entryDef char(32), creation_date datetime, creation_principal bigint, modification_date datetime, modification_principal bigint, topFolder bigint, nextEntryNumber integer, entryRootKey char(15), searchTitle varchar(255), templateTitle varchar(128), tDescription_text text, tDescription_format integer, primary key (id)) ENGINE=InnoDB;
create table SS_FunctionOperations (functionId bigint not null, operationName varchar(128) not null, primary key (functionId, operationName)) ENGINE=InnoDB;
create table SS_Functions (id bigint not null auto_increment, lockVersion bigint not null, zoneId bigint not null, name varchar(128) not null, primary key (id), unique (zoneId, name)) ENGINE=InnoDB;
create table SS_LibraryEntries (binderId bigint not null, type bigint not null, name varchar(255) not null, zoneId bigint, entityId bigint, primary key (binderId, type, name)) ENGINE=InnoDB;
create table SS_LicenseStats (id char(32) not null, zoneId bigint not null, snapshotDate datetime, internalUserCount bigint, externalUserCount bigint, checksum bigint, primary key (id)) ENGINE=InnoDB;
create table SS_Notifications (binderId bigint not null, principalId bigint not null) ENGINE=InnoDB;
create table SS_NotifyStatus (ownerId bigint not null, zoneId bigint, ownerType varchar(16), owningBinderKey varchar(255), owningBinderId bigint, lastModified datetime, lastDigestSent datetime, lastFullSent datetime, primary key (ownerId)) ENGINE=InnoDB;
create table SS_Postings (id char(32) not null, lockVersion bigint not null, zoneId bigint not null, enabled bit, emailAddress varchar(256), password varchar(64), binder bigint, definition char(32), replyPostingOption integer, primary key (id)) ENGINE=InnoDB;
create table SS_PrincipalMembership (userId bigint not null, groupId bigint not null, primary key (userId, groupId)) ENGINE=InnoDB;
create table SS_Principals (id bigint not null auto_increment, type varchar(16) not null, lockVersion bigint not null, zoneId bigint, workspaceId bigint, internalId varchar(32), deleted bit, disabled bit, logVersion bigint, emailAddress varchar(24), name varchar(128), foreignName varchar(128), theme varchar(64), parentBinder bigint, description_text text, description_format integer, title varchar(255), normalTitle varchar(255), iconName varchar(64), definitionType integer, entryDef char(32), creation_date datetime, creation_principal bigint, modification_date datetime, modification_principal bigint, displayStyle varchar(16), loginDate datetime, firstName varchar(64), lastName varchar(64), middleName varchar(64), organization varchar(256), phone varchar(128), zonName varchar(100), skypeId varchar(64), status varchar(256), password varchar(64), timeZone varchar(80), locale varchar(32), digestSeed bigint, postUrl varchar(256), primary key (id), unique (zoneId, foreignName), unique (zoneId, name)) ENGINE=InnoDB;
create table SS_Ratings (principalId bigint not null, entityId bigint not null, entityType integer not null, zoneId bigint, rating bigint, readCount bigint, primary key (principalId, entityId, entityType)) ENGINE=InnoDB;
create table SS_SeenMap (principalId bigint not null, zoneId bigint, seenMap mediumblob not null, lastPrune datetime, primary key (principalId)) ENGINE=InnoDB;
create table SS_SharedEntity (id char(32) not null, referer bigint, zoneId bigint, sharedDate datetime, accessId bigint, accessType bigint, entityType varchar(16), entityId bigint, primary key (id)) ENGINE=InnoDB;
create table SS_Subscriptions (principalId bigint not null, entityId bigint not null, entityType integer not null, zoneId bigint, style integer, encodedStyles varchar(256), primary key (principalId, entityId, entityType)) ENGINE=InnoDB;
create table SS_Tags (id char(32) not null, zoneId bigint, entity_id bigint, entity_type integer, owner_id bigint, owner_type integer, name varchar(64), isPublic bit, primary key (id)) ENGINE=InnoDB;
create table SS_TokenInfoBackground (applicationId bigint not null, userId bigint not null, binderId bigint not null, zoneId bigint, seed varchar(128), primary key (applicationId, userId, binderId)) ENGINE=InnoDB;
create table SS_TokenInfoInteractive (id char(32) not null, zoneId bigint, userId bigint, seed varchar(128), primary key (id)) ENGINE=InnoDB;
create table SS_UserProperties (principalId bigint not null, binderId bigint not null, zoneId bigint, properties blob not null, primary key (principalId, binderId)) ENGINE=InnoDB;
create table SS_WorkAreaFunctionMembers (workAreaFunctionMembershipId bigint not null, memberId bigint not null, primary key (workAreaFunctionMembershipId, memberId)) ENGINE=InnoDB;
create table SS_WorkAreaFunctionMemberships (id bigint not null auto_increment, lockVersion bigint not null, workAreaId bigint not null, workAreaType varchar(16) not null, zoneId bigint not null, functionId bigint not null, primary key (id)) ENGINE=InnoDB;
create table SS_WorkflowMap (binder bigint not null, workflowDefinition char(32) not null, entryDefinition varchar(32) not null, primary key (binder, entryDefinition)) ENGINE=InnoDB;
create table SS_WorkflowResponses (id char(32) not null, zoneId bigint, folderEntry bigint, principal bigint, binder bigint, ownerType varchar(16), ownerId bigint, owningBinderKey varchar(255), owningBinderId bigint, name varchar(64), response varchar(2000), definitionId varchar(32), responderId bigint, responseDate datetime, primary key (id)) ENGINE=InnoDB;
create table SS_WorkflowStates (tokenId bigint not null, lockVersion bigint not null, zoneId bigint, folderEntry bigint, principal bigint, binder bigint, ownerType varchar(16), ownerId bigint, owningBinderKey varchar(255), owningBinderId bigint, wrk_date datetime, wrk_principal bigint, state varchar(64), threadName varchar(64), timerId bigint, definition char(32), primary key (tokenId)) ENGINE=InnoDB;
create table SS_ZoneInfo (id char(32) not null, zoneId bigint not null unique, zoneName varchar(128) not null unique, virtualHost varchar(255) unique, primary key (id)) ENGINE=InnoDB;
create index owningAttachment_Att on SS_Attachments (parentAttachment);
create index entityOwner_Att on SS_Attachments (ownerType, ownerId);
create index ownerBinder_Att on SS_Attachments (binder);
create index ownerPrincipal_Att on SS_Attachments (principal);
create index ownerFolderEntry_Att on SS_Attachments (folderEntry);
create index owningBinder_Att on SS_Attachments (owningBinderId);
alter table SS_Attachments add constraint FKA1AD4C3194B81781 foreign key (parentAttachment) references SS_Attachments (id);
alter table SS_Attachments add constraint FKA1AD4C3158C1A25C foreign key (creation_principal) references SS_Principals (id);
alter table SS_Attachments add constraint FKA1AD4C319C2BF2C9 foreign key (binder) references SS_Forums (id);
alter table SS_Attachments add constraint FKA1AD4C31A0B77CD9 foreign key (modification_principal) references SS_Principals (id);
alter table SS_Attachments add constraint FKA1AD4C3165C1AB13 foreign key (folderEntry) references SS_FolderEntries (id);
alter table SS_Attachments add constraint FKA1AD4C317488E8C7 foreign key (principal) references SS_Principals (id);
alter table SS_Attachments add constraint FKA1AD4C31BEEA2CA9 foreign key (filelock_owner) references SS_Principals (id);
create index owningBinder_audit on SS_AuditTrail (owningBinderId);
create index entityOwner_audit on SS_AuditTrail (entityId, entityType);
create index entityTransaction_audit on SS_AuditTrail (startDate, entityId, entityType, transactionType);
create index owningBinder_clog on SS_ChangeLogs (owningBinderId);
create index entityOwner_clog on SS_ChangeLogs (entityId, entityType);
create index owningBinder_cAtt on SS_CustomAttributes (owningBinderId);
create index ownerBinder_cAtt on SS_CustomAttributes (binder);
create index ownerPrincipal_cAtt on SS_CustomAttributes (principal);
create index owningAttribute_cAtt on SS_CustomAttributes (parent);
create index ownerFolderEntry_cAtt on SS_CustomAttributes (folderEntry);
create index entityOwner_cAtt on SS_CustomAttributes (ownerType, ownerId);
alter table SS_CustomAttributes add constraint FK476EDFC79C2BF2C9 foreign key (binder) references SS_Forums (id);
alter table SS_CustomAttributes add constraint FK476EDFC765C1AB13 foreign key (folderEntry) references SS_FolderEntries (id);
alter table SS_CustomAttributes add constraint FK476EDFC77488E8C7 foreign key (principal) references SS_Principals (id);
alter table SS_CustomAttributes add constraint FK476EDFC76C866300 foreign key (parent) references SS_CustomAttributes (id);
create index ownerKey_Dash on SS_Dashboards (owner_id, owner_type);
alter table SS_Dashboards add constraint FKFA9653BE58C1A25C foreign key (creation_principal) references SS_Principals (id);
alter table SS_Dashboards add constraint FKFA9653BEA0B77CD9 foreign key (modification_principal) references SS_Principals (id);
alter table SS_DefinitionMap add constraint FK170F74A9C2BF2C9 foreign key (binder) references SS_Forums (id);
alter table SS_DefinitionMap add constraint FK170F74ACC076F9B foreign key (definition) references SS_Definitions (id);
alter table SS_Definitions add constraint FK7B56F60158C1A25C foreign key (creation_principal) references SS_Principals (id);
alter table SS_Definitions add constraint FK7B56F601A0B77CD9 foreign key (modification_principal) references SS_Principals (id);
create index address_email on SS_EmailAddresses (address);
alter table SS_EmailAddresses add constraint FKC706C3457488E8C7 foreign key (principal) references SS_Principals (id) on delete cascade;
create index ownerFolderEntry_Event on SS_Events (folderEntry);
create index entityOwner_Event on SS_Events (ownerType, ownerId);
create index ownerBinder_Event on SS_Events (binder);
create index ownerPrincipal_Event on SS_Events (principal);
create index owningBinder_Event on SS_Events (owningBinderId);
alter table SS_Events add constraint FKDE0E53F858C1A25C foreign key (creation_principal) references SS_Principals (id);
alter table SS_Events add constraint FKDE0E53F89C2BF2C9 foreign key (binder) references SS_Forums (id) on delete cascade;
alter table SS_Events add constraint FKDE0E53F8A0B77CD9 foreign key (modification_principal) references SS_Principals (id);
alter table SS_Events add constraint FKDE0E53F865C1AB13 foreign key (folderEntry) references SS_FolderEntries (id) on delete cascade;
alter table SS_Events add constraint FKDE0E53F87488E8C7 foreign key (principal) references SS_Principals (id) on delete cascade;
create index owningEntry_fEntry on SS_FolderEntries (topEntry);
create index owningFolder_fEntry on SS_FolderEntries (parentBinder);
create index owningBinderKey_fEntry on SS_FolderEntries (owningBinderKey);
alter table SS_FolderEntries add constraint FKA6632C83BD21B765 foreign key (reserved_principal) references SS_Principals (id);
alter table SS_FolderEntries add constraint FKA6632C832592FE8C foreign key (topEntry) references SS_FolderEntries (id);
alter table SS_FolderEntries add constraint FKA6632C8358C1A25C foreign key (creation_principal) references SS_Principals (id);
alter table SS_FolderEntries add constraint FKA6632C83A0B77CD9 foreign key (modification_principal) references SS_Principals (id);
alter table SS_FolderEntries add constraint FKA6632C838BB3889B foreign key (entryDef) references SS_Definitions (id);
alter table SS_FolderEntries add constraint FKA6632C839BAA0457 foreign key (parentEntry) references SS_FolderEntries (id);
alter table SS_FolderEntries add constraint FKA6632C8369145F2D foreign key (wrk_principal) references SS_Principals (id);
alter table SS_FolderEntries add constraint FKA6632C83475453F3 foreign key (parentBinder) references SS_Forums (id);
create index owningBinder_Binder on SS_Forums (parentBinder);
alter table SS_Forums add constraint FKDF668A5158C1A25C foreign key (creation_principal) references SS_Principals (id);
alter table SS_Forums add constraint FKDF668A51B356319A foreign key (posting) references SS_Postings (id);
alter table SS_Forums add constraint FKDF668A51A0B77CD9 foreign key (modification_principal) references SS_Principals (id);
alter table SS_Forums add constraint FKDF668A518BB3889B foreign key (entryDef) references SS_Definitions (id);
alter table SS_Forums add constraint FKDF668A51E6DE6B4C foreign key (owner) references SS_Principals (id);
alter table SS_Forums add constraint FKDF668A51475453F3 foreign key (parentBinder) references SS_Forums (id);
alter table SS_Forums add constraint FKDF668A518D8ADE6 foreign key (topFolder) references SS_Forums (id);
alter table SS_FunctionOperations add constraint FKBEF256434C758408 foreign key (functionId) references SS_Functions (id);
alter table SS_Notifications add constraint FK9131F92926FD3D64 foreign key (binderId) references SS_Forums (id);
alter table SS_Notifications add constraint FK9131F929345DBD57 foreign key (principalId) references SS_Principals (id);
create index notifyStatus_full on SS_NotifyStatus (zoneId, lastModified, lastFullSent);
create index notifyStatus_digest on SS_NotifyStatus (zoneId, lastModified, lastDigestSent);
alter table SS_Postings add constraint FKB05DE4909C2BF2C9 foreign key (binder) references SS_Forums (id);
alter table SS_Postings add constraint FKB05DE490CC076F9B foreign key (definition) references SS_Definitions (id);
alter table SS_PrincipalMembership add constraint FK176F6225A3FFCD99 foreign key (userId) references SS_Principals (id);
alter table SS_PrincipalMembership add constraint FK176F622542AEEC1E foreign key (groupId) references SS_Principals (id);
alter table SS_PrincipalMembership add constraint FK176F62257465C5B4 foreign key (userId) references SS_Principals (id);
alter table SS_PrincipalMembership add constraint FK176F6225197D4C44 foreign key (groupId) references SS_Principals (id);
alter table SS_Principals add constraint FK7693816458C1A25C foreign key (creation_principal) references SS_Principals (id);
alter table SS_Principals add constraint FK76938164A0B77CD9 foreign key (modification_principal) references SS_Principals (id);
alter table SS_Principals add constraint FK769381648BB3889B foreign key (entryDef) references SS_Definitions (id);
alter table SS_Principals add constraint FK76938164475453F3 foreign key (parentBinder) references SS_Forums (id);
create index access_shared on SS_SharedEntity (sharedDate, accessId, accessType);
alter table SS_SharedEntity add constraint FK93426C47F68E5AD foreign key (referer) references SS_Principals (id);
create index userId_tokenInfoInteractive on SS_TokenInfoInteractive (userId);
alter table SS_WorkAreaFunctionMembers add constraint FK72202A04A3D23110 foreign key (workAreaFunctionMembershipId) references SS_WorkAreaFunctionMemberships (id);
alter table SS_WorkflowMap add constraint FK33D2499E5123E49A foreign key (workflowDefinition) references SS_Definitions (id);
alter table SS_WorkflowMap add constraint FK33D2499E9C2BF2C9 foreign key (binder) references SS_Forums (id);
create index ownerBinder on SS_WorkflowResponses (binder);
create index owningBinder on SS_WorkflowResponses (owningBinderId);
create index ownerPrincipal on SS_WorkflowResponses (principal);
create index entityOwner on SS_WorkflowResponses (ownerType, ownerId);
create index ownerFolderEntry on SS_WorkflowResponses (folderEntry);
alter table SS_WorkflowResponses add constraint FKC44C5F149C2BF2C9 foreign key (binder) references SS_Forums (id);
alter table SS_WorkflowResponses add constraint FKC44C5F1465C1AB13 foreign key (folderEntry) references SS_FolderEntries (id) on delete cascade;
alter table SS_WorkflowResponses add constraint FKC44C5F147488E8C7 foreign key (principal) references SS_Principals (id);
create index ownerFolderEntry_wState on SS_WorkflowStates (folderEntry);
create index ownerPrincipal_wState on SS_WorkflowStates (principal);
create index owningBinder_wState on SS_WorkflowStates (owningBinderId);
create index entityOwner_wState on SS_WorkflowStates (ownerType, ownerId);
create index ownerBinder_wState on SS_WorkflowStates (binder);
alter table SS_WorkflowStates add constraint FK8FA8AA809C2BF2C9 foreign key (binder) references SS_Forums (id);
alter table SS_WorkflowStates add constraint FK8FA8AA8065C1AB13 foreign key (folderEntry) references SS_FolderEntries (id) on delete cascade;
alter table SS_WorkflowStates add constraint FK8FA8AA8069145F2D foreign key (wrk_principal) references SS_Principals (id);
alter table SS_WorkflowStates add constraint FK8FA8AA807488E8C7 foreign key (principal) references SS_Principals (id);
alter table SS_WorkflowStates add constraint FK8FA8AA80CC076F9B foreign key (definition) references SS_Definitions (id);
create table JBPM_ACTION (ID_ bigint not null auto_increment, class char(1) not null, NAME_ varchar(255), ISPROPAGATIONALLOWED_ bit, ACTIONEXPRESSION_ varchar(255), ISASYNC_ bit, REFERENCEDACTION_ bigint, ACTIONDELEGATION_ bigint, EVENT_ bigint, PROCESSDEFINITION_ bigint, TIMERNAME_ varchar(255), DUEDATE_ varchar(255), REPEAT_ varchar(255), TRANSITIONNAME_ varchar(255), TIMERACTION_ bigint, EXPRESSION_ varchar(4000), EVENTINDEX_ integer, EXCEPTIONHANDLER_ bigint, EXCEPTIONHANDLERINDEX_ integer, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_BYTEARRAY (ID_ bigint not null auto_increment, NAME_ varchar(255), FILEDEFINITION_ bigint, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_BYTEBLOCK (PROCESSFILE_ bigint not null, BYTES_ blob, INDEX_ integer not null, primary key (PROCESSFILE_, INDEX_)) ENGINE=InnoDB;
create table JBPM_COMMENT (ID_ bigint not null auto_increment, VERSION_ integer not null, ACTORID_ varchar(255), TIME_ datetime, MESSAGE_ varchar(4000), TOKEN_ bigint, TASKINSTANCE_ bigint, TOKENINDEX_ integer, TASKINSTANCEINDEX_ integer, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_DECISIONCONDITIONS (DECISION_ bigint not null, TRANSITIONNAME_ varchar(255), EXPRESSION_ varchar(255), INDEX_ integer not null, primary key (DECISION_, INDEX_)) ENGINE=InnoDB;
create table JBPM_DELEGATION (ID_ bigint not null auto_increment, CLASSNAME_ varchar(4000), CONFIGURATION_ varchar(4000), CONFIGTYPE_ varchar(255), PROCESSDEFINITION_ bigint, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_EVENT (ID_ bigint not null auto_increment, EVENTTYPE_ varchar(255), TYPE_ char(1), GRAPHELEMENT_ bigint, NODE_ bigint, PROCESSDEFINITION_ bigint, TRANSITION_ bigint, TASK_ bigint, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_EXCEPTIONHANDLER (ID_ bigint not null auto_increment, EXCEPTIONCLASSNAME_ varchar(4000), TYPE_ char(1), GRAPHELEMENT_ bigint, NODE_ bigint, GRAPHELEMENTINDEX_ integer, PROCESSDEFINITION_ bigint, TRANSITION_ bigint, TASK_ bigint, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_LOG (ID_ bigint not null auto_increment, CLASS_ char(1) not null, INDEX_ integer, DATE_ datetime, TOKEN_ bigint, PARENT_ bigint, SWIMLANEINSTANCE_ bigint, TASKINSTANCE_ bigint, CHILD_ bigint, TASKOLDACTORID_ varchar(255), TASKACTORID_ varchar(255), EXCEPTION_ varchar(4000), ACTION_ bigint, MESSAGE_ varchar(4000), TRANSITION_ bigint, VARIABLEINSTANCE_ bigint, OLDBYTEARRAY_ bigint, NEWBYTEARRAY_ bigint, OLDLONGVALUE_ bigint, NEWLONGVALUE_ bigint, OLDSTRINGVALUE_ varchar(4000), NEWSTRINGVALUE_ varchar(4000), OLDLONGIDCLASS_ varchar(255), OLDLONGIDVALUE_ bigint, NEWLONGIDCLASS_ varchar(255), NEWLONGIDVALUE_ bigint, OLDDATEVALUE_ datetime, NEWDATEVALUE_ datetime, OLDSTRINGIDCLASS_ varchar(255), OLDSTRINGIDVALUE_ varchar(255), NEWSTRINGIDCLASS_ varchar(255), NEWSTRINGIDVALUE_ varchar(255), SOURCENODE_ bigint, DESTINATIONNODE_ bigint, NODE_ bigint, ENTER_ datetime, LEAVE_ datetime, DURATION_ bigint, OLDDOUBLEVALUE_ double precision, NEWDOUBLEVALUE_ double precision, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_MESSAGE (ID_ bigint not null auto_increment, CLASS_ char(1) not null, DESTINATION_ varchar(255), EXCEPTION_ varchar(4000), ISSUSPENDED_ bit, TOKEN_ bigint, TEXT_ varchar(255), ACTION_ bigint, TRANSITIONNAME_ varchar(255), NODE_ bigint, TASKINSTANCE_ bigint, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_MODULEDEFINITION (ID_ bigint not null auto_increment, CLASS_ char(1) not null, NAME_ varchar(4000), PROCESSDEFINITION_ bigint, STARTTASK_ bigint, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_MODULEINSTANCE (ID_ bigint not null auto_increment, CLASS_ char(1) not null, PROCESSINSTANCE_ bigint, TASKMGMTDEFINITION_ bigint, NAME_ varchar(255), primary key (ID_)) ENGINE=InnoDB;
create table JBPM_NODE (ID_ bigint not null auto_increment, CLASS_ char(1) not null, NAME_ varchar(255), PROCESSDEFINITION_ bigint, ISASYNC_ bit, ACTION_ bigint, SUPERSTATE_ bigint, DECISIONEXPRESSION_ varchar(255), DECISIONDELEGATION bigint, SUBPROCESSDEFINITION_ bigint, SIGNAL_ integer, CREATETASKS_ bit, ENDTASKS_ bit, NODECOLLECTIONINDEX_ integer, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_POOLEDACTOR (ID_ bigint not null auto_increment, ACTORID_ varchar(255), SWIMLANEINSTANCE_ bigint, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_PROCESSDEFINITION (ID_ bigint not null auto_increment, NAME_ varchar(255), VERSION_ integer, ISTERMINATIONIMPLICIT_ bit, STARTSTATE_ bigint, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_PROCESSINSTANCE (ID_ bigint not null auto_increment, VERSION_ integer not null, START_ datetime, END_ datetime, ISSUSPENDED_ bit, PROCESSDEFINITION_ bigint, ROOTTOKEN_ bigint, SUPERPROCESSTOKEN_ bigint, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_RUNTIMEACTION (ID_ bigint not null auto_increment, VERSION_ integer not null, EVENTTYPE_ varchar(255), TYPE_ char(1), GRAPHELEMENT_ bigint, PROCESSINSTANCE_ bigint, ACTION_ bigint, PROCESSINSTANCEINDEX_ integer, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_SWIMLANE (ID_ bigint not null auto_increment, NAME_ varchar(255), ACTORIDEXPRESSION_ varchar(255), POOLEDACTORSEXPRESSION_ varchar(255), ASSIGNMENTDELEGATION_ bigint, TASKMGMTDEFINITION_ bigint, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_SWIMLANEINSTANCE (ID_ bigint not null auto_increment, NAME_ varchar(255), ACTORID_ varchar(255), SWIMLANE_ bigint, TASKMGMTINSTANCE_ bigint, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_TASK (ID_ bigint not null auto_increment, NAME_ varchar(255), PROCESSDEFINITION_ bigint, DESCRIPTION_ varchar(4000), ISBLOCKING_ bit, ISSIGNALLING_ bit, DUEDATE_ varchar(255), ACTORIDEXPRESSION_ varchar(255), POOLEDACTORSEXPRESSION_ varchar(255), TASKMGMTDEFINITION_ bigint, TASKNODE_ bigint, STARTSTATE_ bigint, ASSIGNMENTDELEGATION_ bigint, SWIMLANE_ bigint, TASKCONTROLLER_ bigint, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_TASKACTORPOOL (POOLEDACTOR_ bigint not null, TASKINSTANCE_ bigint not null, primary key (TASKINSTANCE_, POOLEDACTOR_)) ENGINE=InnoDB;
create table JBPM_TASKCONTROLLER (ID_ bigint not null auto_increment, TASKCONTROLLERDELEGATION_ bigint, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_TASKINSTANCE (ID_ bigint not null auto_increment, CLASS_ char(1) not null, NAME_ varchar(255), DESCRIPTION_ varchar(4000), ACTORID_ varchar(255), CREATE_ datetime, START_ datetime, END_ datetime, DUEDATE_ datetime, PRIORITY_ integer, ISCANCELLED_ bit, ISSUSPENDED_ bit, ISOPEN_ bit, ISSIGNALLING_ bit, ISBLOCKING_ bit, TASK_ bigint, TOKEN_ bigint, SWIMLANINSTANCE_ bigint, TASKMGMTINSTANCE_ bigint, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_TIMER (ID_ bigint not null auto_increment, NAME_ varchar(255), DUEDATE_ datetime, REPEAT_ varchar(255), TRANSITIONNAME_ varchar(255), EXCEPTION_ varchar(4000), ISSUSPENDED_ bit, ACTION_ bigint, TOKEN_ bigint, PROCESSINSTANCE_ bigint, TASKINSTANCE_ bigint, GRAPHELEMENTTYPE_ varchar(255), GRAPHELEMENT_ bigint, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_TOKEN (ID_ bigint not null auto_increment, VERSION_ integer not null, NAME_ varchar(255), START_ datetime, END_ datetime, NODEENTER_ datetime, NEXTLOGINDEX_ integer, ISABLETOREACTIVATEPARENT_ bit, ISTERMINATIONIMPLICIT_ bit, ISSUSPENDED_ bit, NODE_ bigint, PROCESSINSTANCE_ bigint, PARENT_ bigint, SUBPROCESSINSTANCE_ bigint, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_TOKENVARIABLEMAP (ID_ bigint not null auto_increment, TOKEN_ bigint, CONTEXTINSTANCE_ bigint, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_TRANSITION (ID_ bigint not null auto_increment, NAME_ varchar(255), PROCESSDEFINITION_ bigint, FROM_ bigint, TO_ bigint, FROMINDEX_ integer, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_VARIABLEACCESS (ID_ bigint not null auto_increment, VARIABLENAME_ varchar(255), ACCESS_ varchar(255), MAPPEDNAME_ varchar(255), PROCESSSTATE_ bigint, TASKCONTROLLER_ bigint, INDEX_ integer, SCRIPT_ bigint, primary key (ID_)) ENGINE=InnoDB;
create table JBPM_VARIABLEINSTANCE (ID_ bigint not null auto_increment, CLASS_ char(1) not null, NAME_ varchar(255), CONVERTER_ char(1), TOKEN_ bigint, TOKENVARIABLEMAP_ bigint, PROCESSINSTANCE_ bigint, BYTEARRAYVALUE_ bigint, DATEVALUE_ datetime, DOUBLEVALUE_ double precision, LONGIDCLASS_ varchar(255), LONGVALUE_ bigint, STRINGIDCLASS_ varchar(255), STRINGVALUE_ varchar(255), TASKINSTANCE_ bigint, primary key (ID_)) ENGINE=InnoDB;
alter table JBPM_ACTION add constraint FK_ACTION_EVENT foreign key (EVENT_) references JBPM_EVENT (ID_);
alter table JBPM_ACTION add constraint FK_ACTION_EXPTHDL foreign key (EXCEPTIONHANDLER_) references JBPM_EXCEPTIONHANDLER (ID_);
alter table JBPM_ACTION add constraint FK_ACTION_PROCDEF foreign key (PROCESSDEFINITION_) references JBPM_PROCESSDEFINITION (ID_);
alter table JBPM_ACTION add constraint FK_CRTETIMERACT_TA foreign key (TIMERACTION_) references JBPM_ACTION (ID_);
alter table JBPM_ACTION add constraint FK_ACTION_ACTNDEL foreign key (ACTIONDELEGATION_) references JBPM_DELEGATION (ID_);
alter table JBPM_ACTION add constraint FK_ACTION_REFACT foreign key (REFERENCEDACTION_) references JBPM_ACTION (ID_);
alter table JBPM_BYTEARRAY add constraint FK_BYTEARR_FILDEF foreign key (FILEDEFINITION_) references JBPM_MODULEDEFINITION (ID_);
alter table JBPM_BYTEBLOCK add constraint FK_BYTEBLOCK_FILE foreign key (PROCESSFILE_) references JBPM_BYTEARRAY (ID_);
alter table JBPM_COMMENT add constraint FK_COMMENT_TOKEN foreign key (TOKEN_) references JBPM_TOKEN (ID_);
alter table JBPM_COMMENT add constraint FK_COMMENT_TSK foreign key (TASKINSTANCE_) references JBPM_TASKINSTANCE (ID_);
alter table JBPM_DECISIONCONDITIONS add constraint FK_DECCOND_DEC foreign key (DECISION_) references JBPM_NODE (ID_);
alter table JBPM_DELEGATION add constraint FK_DELEGATION_PRCD foreign key (PROCESSDEFINITION_) references JBPM_PROCESSDEFINITION (ID_);
alter table JBPM_EVENT add constraint FK_EVENT_PROCDEF foreign key (PROCESSDEFINITION_) references JBPM_PROCESSDEFINITION (ID_);
alter table JBPM_EVENT add constraint FK_EVENT_NODE foreign key (NODE_) references JBPM_NODE (ID_);
alter table JBPM_EVENT add constraint FK_EVENT_TRANS foreign key (TRANSITION_) references JBPM_TRANSITION (ID_);
alter table JBPM_EVENT add constraint FK_EVENT_TASK foreign key (TASK_) references JBPM_TASK (ID_);
alter table JBPM_LOG add constraint FK_LOG_SOURCENODE foreign key (SOURCENODE_) references JBPM_NODE (ID_);
alter table JBPM_LOG add constraint FK_LOG_TOKEN foreign key (TOKEN_) references JBPM_TOKEN (ID_);
alter table JBPM_LOG add constraint FK_LOG_OLDBYTES foreign key (OLDBYTEARRAY_) references JBPM_BYTEARRAY (ID_);
alter table JBPM_LOG add constraint FK_LOG_NEWBYTES foreign key (NEWBYTEARRAY_) references JBPM_BYTEARRAY (ID_);
alter table JBPM_LOG add constraint FK_LOG_CHILDTOKEN foreign key (CHILD_) references JBPM_TOKEN (ID_);
alter table JBPM_LOG add constraint FK_LOG_DESTNODE foreign key (DESTINATIONNODE_) references JBPM_NODE (ID_);
alter table JBPM_LOG add constraint FK_LOG_TASKINST foreign key (TASKINSTANCE_) references JBPM_TASKINSTANCE (ID_);
alter table JBPM_LOG add constraint FK_LOG_SWIMINST foreign key (SWIMLANEINSTANCE_) references JBPM_SWIMLANEINSTANCE (ID_);
alter table JBPM_LOG add constraint FK_LOG_PARENT foreign key (PARENT_) references JBPM_LOG (ID_);
alter table JBPM_LOG add constraint FK_LOG_NODE foreign key (NODE_) references JBPM_NODE (ID_);
alter table JBPM_LOG add constraint FK_LOG_ACTION foreign key (ACTION_) references JBPM_ACTION (ID_);
alter table JBPM_LOG add constraint FK_LOG_VARINST foreign key (VARIABLEINSTANCE_) references JBPM_VARIABLEINSTANCE (ID_);
alter table JBPM_LOG add constraint FK_LOG_TRANSITION foreign key (TRANSITION_) references JBPM_TRANSITION (ID_);
alter table JBPM_MESSAGE add constraint FK_MSG_TOKEN foreign key (TOKEN_) references JBPM_TOKEN (ID_);
alter table JBPM_MESSAGE add constraint FK_CMD_NODE foreign key (NODE_) references JBPM_NODE (ID_);
alter table JBPM_MESSAGE add constraint FK_CMD_ACTION foreign key (ACTION_) references JBPM_ACTION (ID_);
alter table JBPM_MESSAGE add constraint FK_CMD_TASKINST foreign key (TASKINSTANCE_) references JBPM_TASKINSTANCE (ID_);
alter table JBPM_MODULEDEFINITION add constraint FK_TSKDEF_START foreign key (STARTTASK_) references JBPM_TASK (ID_);
alter table JBPM_MODULEDEFINITION add constraint FK_MODDEF_PROCDEF foreign key (PROCESSDEFINITION_) references JBPM_PROCESSDEFINITION (ID_);
alter table JBPM_MODULEINSTANCE add constraint FK_TASKMGTINST_TMD foreign key (TASKMGMTDEFINITION_) references JBPM_MODULEDEFINITION (ID_);
alter table JBPM_MODULEINSTANCE add constraint FK_MODINST_PRCINST foreign key (PROCESSINSTANCE_) references JBPM_PROCESSINSTANCE (ID_);
alter table JBPM_NODE add constraint FK_PROCST_SBPRCDEF foreign key (SUBPROCESSDEFINITION_) references JBPM_PROCESSDEFINITION (ID_);
alter table JBPM_NODE add constraint FK_NODE_PROCDEF foreign key (PROCESSDEFINITION_) references JBPM_PROCESSDEFINITION (ID_);
alter table JBPM_NODE add constraint FK_NODE_ACTION foreign key (ACTION_) references JBPM_ACTION (ID_);
alter table JBPM_NODE add constraint FK_DECISION_DELEG foreign key (DECISIONDELEGATION) references JBPM_DELEGATION (ID_);
alter table JBPM_NODE add constraint FK_NODE_SUPERSTATE foreign key (SUPERSTATE_) references JBPM_NODE (ID_);
create index IDX_PLDACTR_ACTID on JBPM_POOLEDACTOR (ACTORID_);
alter table JBPM_POOLEDACTOR add constraint FK_POOLEDACTOR_SLI foreign key (SWIMLANEINSTANCE_) references JBPM_SWIMLANEINSTANCE (ID_);
alter table JBPM_PROCESSDEFINITION add constraint FK_PROCDEF_STRTSTA foreign key (STARTSTATE_) references JBPM_NODE (ID_);
alter table JBPM_PROCESSINSTANCE add constraint FK_PROCIN_PROCDEF foreign key (PROCESSDEFINITION_) references JBPM_PROCESSDEFINITION (ID_);
alter table JBPM_PROCESSINSTANCE add constraint FK_PROCIN_ROOTTKN foreign key (ROOTTOKEN_) references JBPM_TOKEN (ID_);
alter table JBPM_PROCESSINSTANCE add constraint FK_PROCIN_SPROCTKN foreign key (SUPERPROCESSTOKEN_) references JBPM_TOKEN (ID_);
alter table JBPM_RUNTIMEACTION add constraint FK_RTACTN_PROCINST foreign key (PROCESSINSTANCE_) references JBPM_PROCESSINSTANCE (ID_);
alter table JBPM_RUNTIMEACTION add constraint FK_RTACTN_ACTION foreign key (ACTION_) references JBPM_ACTION (ID_);
alter table JBPM_SWIMLANE add constraint FK_SWL_ASSDEL foreign key (ASSIGNMENTDELEGATION_) references JBPM_DELEGATION (ID_);
alter table JBPM_SWIMLANE add constraint FK_SWL_TSKMGMTDEF foreign key (TASKMGMTDEFINITION_) references JBPM_MODULEDEFINITION (ID_);
alter table JBPM_SWIMLANEINSTANCE add constraint FK_SWIMLANEINST_TM foreign key (TASKMGMTINSTANCE_) references JBPM_MODULEINSTANCE (ID_);
alter table JBPM_SWIMLANEINSTANCE add constraint FK_SWIMLANEINST_SL foreign key (SWIMLANE_) references JBPM_SWIMLANE (ID_);
alter table JBPM_TASK add constraint FK_TSK_TSKCTRL foreign key (TASKCONTROLLER_) references JBPM_TASKCONTROLLER (ID_);
alter table JBPM_TASK add constraint FK_TASK_ASSDEL foreign key (ASSIGNMENTDELEGATION_) references JBPM_DELEGATION (ID_);
alter table JBPM_TASK add constraint FK_TASK_TASKNODE foreign key (TASKNODE_) references JBPM_NODE (ID_);
alter table JBPM_TASK add constraint FK_TASK_PROCDEF foreign key (PROCESSDEFINITION_) references JBPM_PROCESSDEFINITION (ID_);
alter table JBPM_TASK add constraint FK_TASK_STARTST foreign key (STARTSTATE_) references JBPM_NODE (ID_);
alter table JBPM_TASK add constraint FK_TASK_TASKMGTDEF foreign key (TASKMGMTDEFINITION_) references JBPM_MODULEDEFINITION (ID_);
alter table JBPM_TASK add constraint FK_TASK_SWIMLANE foreign key (SWIMLANE_) references JBPM_SWIMLANE (ID_);
alter table JBPM_TASKACTORPOOL add constraint FK_TSKACTPOL_PLACT foreign key (POOLEDACTOR_) references JBPM_POOLEDACTOR (ID_);
alter table JBPM_TASKACTORPOOL add constraint FK_TASKACTPL_TSKI foreign key (TASKINSTANCE_) references JBPM_TASKINSTANCE (ID_);
alter table JBPM_TASKCONTROLLER add constraint FK_TSKCTRL_DELEG foreign key (TASKCONTROLLERDELEGATION_) references JBPM_DELEGATION (ID_);
create index IDX_TASK_ACTORID on JBPM_TASKINSTANCE (ACTORID_);
alter table JBPM_TASKINSTANCE add constraint FK_TASKINST_TMINST foreign key (TASKMGMTINSTANCE_) references JBPM_MODULEINSTANCE (ID_);
alter table JBPM_TASKINSTANCE add constraint FK_TASKINST_TOKEN foreign key (TOKEN_) references JBPM_TOKEN (ID_);
alter table JBPM_TASKINSTANCE add constraint FK_TASKINST_SLINST foreign key (SWIMLANINSTANCE_) references JBPM_SWIMLANEINSTANCE (ID_);
alter table JBPM_TASKINSTANCE add constraint FK_TASKINST_TASK foreign key (TASK_) references JBPM_TASK (ID_);
alter table JBPM_TIMER add constraint FK_TIMER_TOKEN foreign key (TOKEN_) references JBPM_TOKEN (ID_);
alter table JBPM_TIMER add constraint FK_TIMER_PRINST foreign key (PROCESSINSTANCE_) references JBPM_PROCESSINSTANCE (ID_);
alter table JBPM_TIMER add constraint FK_TIMER_ACTION foreign key (ACTION_) references JBPM_ACTION (ID_);
alter table JBPM_TIMER add constraint FK_TIMER_TSKINST foreign key (TASKINSTANCE_) references JBPM_TASKINSTANCE (ID_);
alter table JBPM_TOKEN add constraint FK_TOKEN_PARENT foreign key (PARENT_) references JBPM_TOKEN (ID_);
alter table JBPM_TOKEN add constraint FK_TOKEN_NODE foreign key (NODE_) references JBPM_NODE (ID_);
alter table JBPM_TOKEN add constraint FK_TOKEN_PROCINST foreign key (PROCESSINSTANCE_) references JBPM_PROCESSINSTANCE (ID_);
alter table JBPM_TOKEN add constraint FK_TOKEN_SUBPI foreign key (SUBPROCESSINSTANCE_) references JBPM_PROCESSINSTANCE (ID_);
alter table JBPM_TOKENVARIABLEMAP add constraint FK_TKVARMAP_CTXT foreign key (CONTEXTINSTANCE_) references JBPM_MODULEINSTANCE (ID_);
alter table JBPM_TOKENVARIABLEMAP add constraint FK_TKVARMAP_TOKEN foreign key (TOKEN_) references JBPM_TOKEN (ID_);
alter table JBPM_TRANSITION add constraint FK_TRANSITION_TO foreign key (TO_) references JBPM_NODE (ID_);
alter table JBPM_TRANSITION add constraint FK_TRANS_PROCDEF foreign key (PROCESSDEFINITION_) references JBPM_PROCESSDEFINITION (ID_);
alter table JBPM_TRANSITION add constraint FK_TRANSITION_FROM foreign key (FROM_) references JBPM_NODE (ID_);
alter table JBPM_VARIABLEACCESS add constraint FK_VARACC_TSKCTRL foreign key (TASKCONTROLLER_) references JBPM_TASKCONTROLLER (ID_);
alter table JBPM_VARIABLEACCESS add constraint FK_VARACC_SCRIPT foreign key (SCRIPT_) references JBPM_ACTION (ID_);
alter table JBPM_VARIABLEACCESS add constraint FK_VARACC_PROCST foreign key (PROCESSSTATE_) references JBPM_NODE (ID_);
alter table JBPM_VARIABLEINSTANCE add constraint FK_VARINST_TK foreign key (TOKEN_) references JBPM_TOKEN (ID_);
alter table JBPM_VARIABLEINSTANCE add constraint FK_VARINST_TKVARMP foreign key (TOKENVARIABLEMAP_) references JBPM_TOKENVARIABLEMAP (ID_);
alter table JBPM_VARIABLEINSTANCE add constraint FK_VARINST_PRCINST foreign key (PROCESSINSTANCE_) references JBPM_PROCESSINSTANCE (ID_);
alter table JBPM_VARIABLEINSTANCE add constraint FK_VAR_TSKINST foreign key (TASKINSTANCE_) references JBPM_TASKINSTANCE (ID_);
alter table JBPM_VARIABLEINSTANCE add constraint FK_BYTEINST_ARRAY foreign key (BYTEARRAYVALUE_) references JBPM_BYTEARRAY (ID_);
CREATE TABLE SSQRTZ_JOB_DETAILS(JOB_NAME VARCHAR(80) NOT NULL,JOB_GROUP VARCHAR(80) NOT NULL,DESCRIPTION VARCHAR(120) NULL,JOB_CLASS_NAME VARCHAR(128) NOT NULL,IS_DURABLE VARCHAR(1) NOT NULL,IS_VOLATILE VARCHAR(1) NOT NULL,IS_STATEFUL VARCHAR(1) NOT NULL,REQUESTS_RECOVERY VARCHAR(1) NOT NULL,JOB_DATA BLOB NULL,PRIMARY KEY (JOB_NAME,JOB_GROUP))TYPE=InnoDB;
CREATE TABLE SSQRTZ_JOB_LISTENERS (JOB_NAME VARCHAR(80) NOT NULL,JOB_GROUP VARCHAR(80) NOT NULL,JOB_LISTENER VARCHAR(80) NOT NULL,PRIMARY KEY (JOB_NAME,JOB_GROUP,JOB_LISTENER),INDEX (JOB_NAME, JOB_GROUP))TYPE=InnoDB;
CREATE TABLE SSQRTZ_TRIGGERS (TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,JOB_NAME VARCHAR(80) NOT NULL,JOB_GROUP VARCHAR(80) NOT NULL,IS_VOLATILE VARCHAR(1) NOT NULL,DESCRIPTION VARCHAR(120) NULL,NEXT_FIRE_TIME BIGINT(13) NULL,PREV_FIRE_TIME BIGINT(13) NULL,TRIGGER_STATE VARCHAR(16) NOT NULL,TRIGGER_TYPE VARCHAR(8) NOT NULL,START_TIME BIGINT(13) NOT NULL,END_TIME BIGINT(13) NULL,CALENDAR_NAME VARCHAR(80) NULL,MISFIRE_INSTR SMALLINT(2) NULL,PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),INDEX (JOB_NAME, JOB_GROUP))TYPE=InnoDB;
CREATE TABLE SSQRTZ_SIMPLE_TRIGGERS (TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,REPEAT_COUNT BIGINT(7) NOT NULL,REPEAT_INTERVAL BIGINT(12) NOT NULL,TIMES_TRIGGERED BIGINT(7) NOT NULL,PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),INDEX (TRIGGER_NAME, TRIGGER_GROUP))TYPE=InnoDB;
CREATE TABLE SSQRTZ_CRON_TRIGGERS (TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,CRON_EXPRESSION VARCHAR(80) NOT NULL,TIME_ZONE_ID VARCHAR(80),PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),INDEX (TRIGGER_NAME, TRIGGER_GROUP))TYPE=InnoDB;
CREATE TABLE SSQRTZ_BLOB_TRIGGERS (TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,BLOB_DATA BLOB NULL,PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),INDEX (TRIGGER_NAME, TRIGGER_GROUP))TYPE=InnoDB;
CREATE TABLE SSQRTZ_TRIGGER_LISTENERS (TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,TRIGGER_LISTENER VARCHAR(80) NOT NULL,PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_LISTENER),INDEX (TRIGGER_NAME, TRIGGER_GROUP))TYPE=InnoDB;
CREATE TABLE SSQRTZ_CALENDARS (CALENDAR_NAME VARCHAR(80) NOT NULL,CALENDAR BLOB NOT NULL,PRIMARY KEY (CALENDAR_NAME))TYPE=InnoDB;
CREATE TABLE SSQRTZ_PAUSED_TRIGGER_GRPS (TRIGGER_GROUP VARCHAR(80) NOT NULL,PRIMARY KEY (TRIGGER_GROUP))TYPE=InnoDB;
CREATE TABLE SSQRTZ_FIRED_TRIGGERS (ENTRY_ID VARCHAR(95) NOT NULL,TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,IS_VOLATILE VARCHAR(1) NOT NULL,INSTANCE_NAME VARCHAR(80) NOT NULL,FIRED_TIME BIGINT(13) NOT NULL,STATE VARCHAR(16) NOT NULL,JOB_NAME VARCHAR(80) NULL,JOB_GROUP VARCHAR(80) NULL,IS_STATEFUL VARCHAR(1) NULL,REQUESTS_RECOVERY VARCHAR(1) NULL,PRIMARY KEY (ENTRY_ID))TYPE=InnoDB;
CREATE TABLE SSQRTZ_SCHEDULER_STATE (INSTANCE_NAME VARCHAR(80) NOT NULL,LAST_CHECKIN_TIME BIGINT(13) NOT NULL,CHECKIN_INTERVAL BIGINT(13) NOT NULL,RECOVERER VARCHAR(80) NULL,PRIMARY KEY (INSTANCE_NAME))TYPE=InnoDB;
CREATE TABLE SSQRTZ_LOCKS (LOCK_NAME VARCHAR(40) NOT NULL,PRIMARY KEY (LOCK_NAME))TYPE=InnoDB;
ALTER TABLE SSQRTZ_CRON_TRIGGERS ADD CONSTRAINT FK_SSQRTZ_CRON_TRIGGERS_SSQRTZ_TRIGGERS FOREIGN KEY
  (TRIGGER_NAME,TRIGGER_GROUP) REFERENCES SSQRTZ_TRIGGERS (TRIGGER_NAME,TRIGGER_GROUP);
ALTER TABLE SSQRTZ_BLOB_TRIGGERS ADD CONSTRAINT FK_SSQRTZ_BLOB_TRIGGERS_SSQRTZ_TRIGGERS FOREIGN KEY
  (TRIGGER_NAME,TRIGGER_GROUP) REFERENCES SSQRTZ_TRIGGERS (TRIGGER_NAME,TRIGGER_GROUP);
ALTER TABLE SSQRTZ_JOB_LISTENERS ADD CONSTRAINT FK_SSQRTZ_JOB_LISTENERS_SSQRTZ_JOB_DETAILS FOREIGN KEY
  (JOB_NAME,JOB_GROUP) REFERENCES SSQRTZ_JOB_DETAILS (JOB_NAME,JOB_GROUP);
ALTER TABLE SSQRTZ_SIMPLE_TRIGGERS ADD CONSTRAINT FK_SSQRTZ_SIMPLE_TRIGGERS_SSQRTZ_TRIGGERS FOREIGN KEY
  (TRIGGER_NAME,TRIGGER_GROUP) REFERENCES SSQRTZ_TRIGGERS (TRIGGER_NAME,TRIGGER_GROUP);
ALTER TABLE SSQRTZ_TRIGGER_LISTENERS ADD CONSTRAINT FK_SSQRTZ_TRIGGER_LISTENERS_SSQRTZ_TRIGGERS FOREIGN KEY
  (TRIGGER_NAME,TRIGGER_GROUP) REFERENCES SSQRTZ_TRIGGERS (TRIGGER_NAME,TRIGGER_GROUP);
ALTER TABLE SSQRTZ_TRIGGERS ADD CONSTRAINT FK_SSQRTZ_TRIGGERS_SSQRTZ_JOB_DETAILS FOREIGN KEY
  (JOB_NAME,JOB_GROUP) REFERENCES SSQRTZ_JOB_DETAILS (JOB_NAME,JOB_GROUP);
INSERT INTO SSQRTZ_LOCKS values('TRIGGER_ACCESS');
INSERT INTO SSQRTZ_LOCKS values('JOB_ACCESS');
INSERT INTO SSQRTZ_LOCKS values('CALENDAR_ACCESS');
INSERT INTO SSQRTZ_LOCKS values('STATE_ACCESS');
INSERT INTO SSQRTZ_LOCKS values('MISFIRE_ACCESS');
commit;

<?xml version="1.0"?>

<project name="gwt" basedir="." default="compile">
	<import file="../build-common.xml"   />
	<import file="../deploy-support.xml" />


	<!-- Define the basics of what we're building. -->
	<property name="jar.file"         value="kablink-teaming-gwt.jar" />
	<property name="build.gwt.module" value="GwtTeaming"              />

	
	<!-- Define what we're building for GwtTeaming. -->
	<target name="init-gwt-build" depends="init-gwt-builds, init-gwt-production, init-gwt-development">
		<property name="gwt.module" value="org.kablink.teaming.gwt.${gwt.base}" />
		<property name="gwt.war"    value="-war www"                            />
	</target>
	<target name="init-gwt-builds">
		<condition property="development.build">
			<equals arg1="${build.gwt.mode}" arg2="development" />
		</condition>
		<condition property="production.build">
			<not>
				<isset property="development.build"/>
			</not>
		</condition>
	</target>
	<target name="init-gwt-production" if="production.build">
		<echo message="Compiling ${build.gwt.module} for production."/>
		<property name="gwt.base"            value="${build.gwt.module}_prod" />
		<property name="gwt.localWorkers"    value="-localWorkers 4"          />
		<property name="gwt.logLevel"        value="-logLevel INFO"           />
		<property name="gwt.style"           value="-style OBF"               />
		<property name="gwt.additionalArgs1" value=""                         />
	</target>
	<target name="init-gwt-development" if="development.build">
		<echo message="Compiling ${build.gwt.module} for development."/>
		<property name="gwt.base"            value="${build.gwt.module}_dev" />
		<property name="gwt.localWorkers"    value="-localWorkers 2"         />
		<property name="gwt.logLevel"        value="-logLevel INFO"          />
		<property name="gwt.style"           value="-style DETAILED"         />
		<property name="gwt.additionalArgs1" value="-draftCompile -ea"       />
	</target>

	<!-- Are we supposed to generate a compilation report? -->
	<condition property="gwt.additionalArgs2" value="-compileReport" else="">
		<istrue value="${build.gwt.compileReport}" />
	</condition>
	
	<!-- Define the platform that we're building on. -->
	<condition property="build.mac"      value="true" else="false">                                     <os family="mac"     />      </condition>
	<condition property="build.linux"    value="true" else="false"><and><isfalse value="${build.mac}" /><os family="unix"    /></and></condition>
	<condition property="build.windows"  value="true" else="false">                                     <os family="windows" />      </condition>

	
	<!-- Define the GWT development jar. -->
	<condition property="gwt.dev.jar" value="gwt-dev.jar"><istrue value="${build.linux}"   /></condition>
	<condition property="gwt.dev.jar" value="gwt-dev.jar"><istrue value="${build.mac}"     /></condition>
	<condition property="gwt.dev.jar" value="gwt-dev.jar"><istrue value="${build.windows}" /></condition>

	
	<!-- Define the tool directories. -->
	<property name="gwt.dir" location="../tools/gwt" />
	<property name="lib.dir" location="../lib"       />

	
	<!-- Set the desired classpath. -->
	<fileset id="gwtjars" dir="${gwt.dir}">
		<include name="gwt-user.jar"                        />
		<include name="validation-api-1.0.0.GA.jar"         />
		<include name="validation-api-1.0.0.GA-sources.jar" />
		<include name="${gwt.dev.jar}"                      />
	</fileset>
	<fileset id="libjars" dir="${lib.dir}">
		<include name="*jar" />
	</fileset>
	<pathconvert property="gwtjars" refid="gwtjars" />
	<pathconvert property="libjars" refid="libjars" />
	<path id="classpath">
		<pathelement location="${src.dir}"  />
		<pathelement path="${gwtjars}"      />
		<pathelement path="${libjars}"      />
	</path>

	
	<target name="clean">
		<delete>
			<fileset dir="." includes="${jar.file}" />
		</delete>
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="classes" />
			<fileset dir="extras"  />
			<fileset dir="www"     />
		</delete>
	</target>

	
	<target name="compile-ignored" depends="build-common.compile,compile-gwt" />

	<target name="compile-gwt" depends="init-gwt-build">
	  <!-- Compile the GWT stuff into www -->
		<java
				classpath="src:${gwt.dir}/gwt-user.jar:${gwt.dir}/validation-api-1.0.0.GA.jar:${gwt.dir}/validation-api-1.0.0.GA-sources.jar:${gwt.dir}/${gwt.dev.jar}:"
				failonerror="true"
				classname="com.google.gwt.dev.Compiler"
				fork="true">
			<!-- GWT Compiler JVM arguments. -->
			<jvmarg value="-Xms1024m"                />
			<jvmarg value="-Xmx1024m"                />
			<jvmarg value="-Xss16m"                  />
			<jvmarg value="-Xverify:none"            />
			<jvmarg value="-XX:PermSize=32m"         />
			<jvmarg value="-XX:MaxPermSize=32m"      />
			<jvmarg value="-Djava.awt.headless=true" />
			<!-- GWT Compiler arguments. -->
			<arg line="${gwt.war} ${gwt.style} ${gwt.logLevel} ${gwt.localWorkers} ${gwt.additionalArgs1} ${gwt.additionalArgs2} ${gwt.module}" />
		</java>
	</target>

	<target name="build"/>
	
	<target name="deploy" depends="jar">
		<antcall target="deploy-jar">
			<param name="deploy-support.jar.file" value="${jar.file}" />
		</antcall>
		<antcall target="deploy-gwt"/>
	</target>
	
	<target name="deploy-gwt" depends="compile-gwt">
  		<property name="web.static.path" value="static/${web.static.dir}" />
		<mkdir  dir="${app.server.ssf.dir}/${web.static.path}/js/gwt"/>
		<copy todir="${app.server.ssf.dir}/${web.static.path}/js/gwt">
		        <fileset dir="www">
		        	<include name="**/*"/>
			</fileset>
		</copy>			
	</target>
</project>
